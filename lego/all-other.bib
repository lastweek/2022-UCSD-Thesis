@TechReport{ACCETTA80,
  key =          "Accetta et al",
  author =       "M. Accetta and G. Robertson and M. Satyanarayanan and
                 M. and Thompson",
  title =        "The Design of a Network-Based Central File System",
  type =         "Technical Report",
  number =       "7",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1980",
  month =        aug,
  bibdate =      "Fri Jan 6 13:47:21 1984",
}

@PhdThesis{ALMES80,
  key =          "Almes",
  author =       "G. T. Almes",
  title =        "Garbage Collection in an Object-Oriented System",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jun,
  year =         "1980",
}

@TechReport{ALMES84,
  key =          "Almes \& Holman",
  author =       "G. Almes and C. Holman",
  title =        "Edmas: An Object-Oriented, Locally Distributed Mail
                 System",
  number =       "84-08-03",
  year =         "1984",
  month =        aug,
  abstract =     "The Eden Project is a five-year effort to design,
                 build and test operating system structures for local
                 area networks. A specific goal is to allow users to
                 obtain the advantages of both physical distribution and
                 logical integration. Edmas, the Eden mail system,
                 provided an early test of Eden's usefulness. This
                 paper: shows how Eden is used to build location
                 independent applications, shows how Eden's advanced
                 functionality can be used to solve practical problems
                 in the structuring of such applications, and makes some
                 contributions to mail system design, particularly in
                 the areas of replying and distribution lists.",
  bibdate =      "Mon Mar 18 10:27:34 1985",
}

@Article{ALMES85,
  key =          "Almes et al.",
  author =       "G. T. Almes and A. P. Black and E. D. Lazowska and J.
                 D. Noe",
  title =        "The Eden System: {A} Technical Review",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-11",
  number =       "1",
  month =        jan,
  year =         "1985",
  pages =        "43--59",
  keywords =     "capability; concurrent Euclid; concurrent programming;
                 distributed electronic mail; distributed program;
                 distributed system; Eden; object-oriented system;
                 remote procedure call",
  bibdate =      "Wed Mar 6 10:33:31 1985",
}

@InProceedings{ALMESA84,
  key =          "Almes et al.",
  author =       "G. Almes and A. Black and C. Bunje and D. Wiebe",
  title =        "Edmas: {A} Locally Distributed Mail System",
  booktitle =    "Proceedings of the 7th International Conference on
                 Software Engineering",
  organization = "University of Washington",
  publisher =    "IEEE",
  address =      "Boulder, CO",
  month =        mar,
  year =         "1984",
  pages =        "56--66",
  abstract =     "The Eden Project is a five-year effort to design,
                 build and test operating system structures for local
                 area networks. A specific goal is to allow users to
                 obtain the advantages of both physical distribution and
                 logical integration. Since Eden is physically
                 distributed, its users can take advantage of personal
                 workstations. Since Eden is logically integrated,
                 system resources can be named and accessed in a
                 location independent way. Edmas, the Eden mail system,
                 was designed to be an early test of Eden's usefulness.
                 This paper describes the design and implementation of
                 Edmas, and presents several of the lessons we have
                 learned about construction location independent
                 services and about the design of mail systems.",
  bibdate =      "Wed Mar 20 13:52:38 1985",
}

@PhdThesis{ANDLER79,
  key =          "Andler",
  author =       "S. A. Andler",
  title =        "Predicate Path Expressions: {A} High-level
                 Synchronization Mechanism",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        aug,
  year =         "1979",
  bibdate =      "Wed Dec 29 16:56:50 1982",
}

@PhdThesis{ANDREWS74,
  key =          "Andrews",
  author =       "G. R. Andrews",
  title =        "{COPS}--{A} Protection Mechanism for Computer
                 Systems",
  school =       "University of Washington",
  month =        jul,
  year =         "1974",
  number =       "74-07-12",
  abstract =     "This dissertation describes a mechanism sufficient to
                 conveniently solve a variety of problems in the areas
                 of isolation, controlled sharing, restricted access,
                 mutually suspicious computations, and confinement. In
                 addition, a model of computer protection is developed
                 in order to abstract this mechanism and others, define
                 types of protection problems, and define a set of
                 criteria by which to evaluate the utility and
                 functional completeness of any protection mechanism.
                 COPS is a paper design; hence no discussion is included
                 on aspects such as user interfaces or control languages
                 for such a system.",
}

@TechReport{AUBAN87,
  key =          "Auban et al.",
  author =       "J. M. B. Auban and P. W. Hutto and M. Y. A. Khalidi",
  title =        "The Architecture of the Ra Kernel",
  number =       "GIT-ICS-87/35",
  institution =  "School of Information and Computer Science",
  address =      "Georgia Institute of Technology, Atlanta, GA",
  year =         "1987",
  pages =        "1--43",
  bibdate =      "Tue Apr 11 09:10:54 1989",
  owner =        "payne",
}

@TechReport{AVRUNIN82,
  key =          "Avrunin \& Wileden",
  author =       "G. S. Avrunin and J. C. Wileden",
  title =        "Describing and Analyzing Distributed System Designs",
  type =         "COINS",
  number =       "82-2",
  institution =  "University of Massachusetts at Amherst",
  year =         "1982",
  month =        jan,
  abstract =     "In this paper we outline an approach to describing and
                 analyzing designs for distributed software systems. A
                 descriptive notation is introduced and analysis
                 techniques applicable to designs expressed in that
                 notation are presented. The usefulness of the approach
                 is illustrated by applying it to a realistic
                 distributed software system design problem involving
                 mutual exclusion in a computer network.",
  bibdate =      "Thu Feb 28 16:25:06 1985",
}

%  organization = "Association for Computing Machinery",
@InProceedings{BABAOGLU81,
  key =          "Babaoglu \& Joy",
  author =       "O. Babaoglu and W. Joy",
  title =        "{Converting a Swap-Based System to do Paging in an
                 Architecture lacking Page-Referenced Bits}",
  booktitle =    "Proceedings of the 8th ACM Symposium on Operating System
                 Principles",
  address =      "Pacific Grove, CA",
  month =        dec,
  year =         "1981",
  pages =        "78--86",
  abstract =     "This paper discusses the modifications made to the
                 UNIX operating system for the VAX 11/780 to convert it
                 from a swap-based segmented system to a paging-based
                 virtual memory system. Of particular interest is that
                 the host machine architecture does not include
                 page-referenced bits. We discuss considerations in the
                 design of page-replacement and load-control policies
                 for such an architecture, and outline current work in
                 modeling the policies employed by the system. We
                 describe our experience with the chosen algorithms
                 based on benchmark-driven studies and production system
                 use.",
  bibdate =      "Wed Oct 10 08:37:56 1984",
}

@Article{BADAL86,
  key =          "Badal",
  author =       "D. Z. Badal",
  title =        "The Distributed Deadlock Detection Algorithm",
  journal =      "ACM Transactions on Computer Systems",
  publisher =    "Association for Computing Machinery",
  volume =       "4",
  number =       "4",
  month =        nov,
  year =         "1986",
  pages =        "320--337",
  keywords =     "Algorithms; communication deadlock; distributed
                 algorithms; distributed deadlock detection; message
                 communication systems; resource deadlock",
  abstract =     "We propose a distributed deadlock detection algorithm
                 for distributed computer systems. We consider two types
                 of resources, depending on whether the remote resource
                 lock granularity and mode can or cannot be determined
                 without access to the remote resource site. We present
                 the algorithm, its performance analysis, and an
                 informal argument about its correctness. The proposed
                 algorithm has a hierarchical design intended to detect
                 the most frequent deadlocks with maximum efficiency.",
  bibdate =      "Thu Jan 15 14:38:28 1987",
  owner =        "manning",
}

@Article{BAER76,
  key =          "Baer \& Sager",
  author =       "J. L. Baer and G. R. Sager",
  title =        "Dynamic Improvement of Locality in Virtual Memory
                 Systems",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-2",
  number =       "1",
  month =        mar,
  year =         "1976",
  pages =        "54--62",
  keywords =     "virtual memory, paging, locality replacement
                 algorithm, predictive loading, dynamic restructuring",
  abstract =     "Replacement algorithms for virtual memory systems are
                 typically based on temporal measures of locality, while
                 predictive loading and program restructuring are based
                 on spatial measures of locality. This paper suggests
                 some techniques for dynamically improving the spatial
                 locality of a program via predictive loading and
                 virtual space restructuring, and presents the results
                 of applying these techniques to actual programs. Bounds
                 are derived for the performance of the methods.",
  bibdate =      "Tue Jan 10 09:25:33 1984",
}

@Article{BALL76,
  key =          "Ball et al.",
  author =       "J. E. Ball and J. A. Feldman and J. R. Low and R. F.
                 Rashid and P. D. Rovner",
  title =        "{RIG}, Rochester's Intelligent Gateway: System
                 Overview",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-2",
  number =       "4",
  page =         "321-328",
  month =        dec,
  year =         "1976",
}

@InProceedings{BARNARD79,
  key =          "Barnard et al.",
  author =       "D. T. Barnard and J. H. Kulick and D. MacMillan",
  title =        "Hardware support for a multiprocessing kernel",
  booktitle =    "Proceedings of the Seventh International Symposium on
                 Computer Systems",
  organization = "IEEE",
  address =      "Anaheim, CA",
  month =        jan,
  year =         "1979",
  pages =        "47--52",
  bibdate =      "Fri Jul 8 16:50:55 1983",
}

@Article{BARRON72,
  key =          "Barron \& Jackson",
  author =       "D. W. Barron and I. R. Jackson",
  title =        "The Evolution of Job Control Languages",
  journal =      "Software--Practice and Experience",
  volume =       "2",
  year =         "1972",
  pages =        "143--162",
  abstract =     "This paper traces the historical development of
                 command languages, and compares OS/360 and the George 3
                 CL. Modern CL's are shown to be akin to programming
                 languages. Many of the problems of OS/360 JCL are
                 illustrated.",
}

@InProceedings{BASKETT77,
  key =          "Baskett \& Howard",
  author =       "F. Baskett and J. H. Howard",
  title =        "Task Communicaton in {DEMOS}",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  address =      "Reading, MA",
  year =         "1977",
  pages =        "23--32",
  bibdate =      "Fri Jan 6 13:55:03 1984",
}

@PhdThesis{BAUDET78,
  author =       "G. M. Baudet",
  key =          "Baudet",
  title =        "The design and analysis of algorithms for asynchronous
                 multiprocessors",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        apr,
  year =         "1978",
}

@Article{BELADY69,
  key =          "Belady \& Kuehner",
  author =       "L. A. Belady and C. J. Kuehner",
  title =        "Dynamic Space-Sharing in Computer Systems",
  journal =      cacm,
  volume =       "12",
  number =       "5",
  year =         "1969",
  pages =        "282--288",
  bibdate =      "Tue Jul 24 08:01:07 1984",
}

@TechReport{BENTLEY81,
  key =          "Bentley",
  author =       "J. L. Bentley",
  title =        "Writing Efficient Programs",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        oct,
  year =         "1981",
}



@InProceedings{BershadEtAl92,
  author =       "Brian Bershad and Richard Draves and Alessandro Forin",
  title = 	 "{Using Microbenchmarks to Evaluate System Performance}",
  year = 	 {1992},
  booktitle =    "Workshop on Workstation Operating Systems IV",
}

@Article{BERSHAD87,
  key =          "Bershad et al.",
  author =       "B. N. Bershad and D. T. Ching and E. D. Lazowska and
                 J. Sanislo and M. Schwartz",
  title =        "A Remote Procedure Call Facility for Interconnecting
                 Heterogeneous Computer Systems",
  journal =      "IEEE Transactions on Software Engineering",
  publisher =    "IEEE",
  volume =       "SE-13",
  number =       "6",
  month =        aug,
  year =         "1987",
  pages =        "880--894",
  keywords =     "Distributed computer systems; heterogeneous computer
                 systems; remote procedure call",
  bibdate =      "Tue Jul 28 16:32:47 1987",
  owner =        "manning",
}

@Article{BIAGIONI86,
  key =          "Biagioni et al.",
  author =       "E. Biagioni and K. Hinrichs and G. Heiser and C.
                 Muller",
  title =        "A Portable Operating System Interface and Utility
                 Library",
  journal =      "Software",
  publisher =    "IEEE",
  volume =       "3",
  number =       "6",
  month =        nov,
  year =         "1986",
  pages =        "18--26",
  bibdate =      "Mon Feb 2 11:10:37 1987",
  owner =        "manning",
}


@InProceedings{BIRRELL83,
  key =          "Birrell \& Nelson",
  author =       "A. D. Birrell and B. J. Nelson",
  title =        "Implementing Remote Procedure Calls",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Bretton Woods, NH",
  month =        oct,
  year =         "1983",
  pages =        "3",
  annote =       "Birrell and Nelson from Xerox PARC discuss
                 implementing Remote Procedure Calls. This abstract was
                 written to justify their use of a packet transport
                 protocol, given the efficiency-improvement steps they
                 have taken. Those are: a. minimize the number of
                 packets transmitted for simple calls. The simplest
                 calls take just one packet in each direction, b. ensure
                 that connection establishment and take down are cheap
                 and that the maintenance of large numbers of
                 connections does not impose an undue load on the server
                 nodes.",
  bibdate =      "Fri Feb 1 12:26:47 1985",
}

@Article{BIRRELL84,
  key =          "Birrell \& Nelson",
  author =       "A. D. Birrell and B. J. Nelson",
  title =        "Implementing Remote Procedure Calls",
  journal =      "ACM Transactions on Computer Systems",
  publisher =    "Association for Computing Machinery",
  volume =       "2",
  number =       "1",
  month =        feb,
  year =         "1984",
  pages =        "39--59",
  keywords =     "Design; experimentation; performance; security; remote
                 procedure calls; transport lyer protocols; distributed
                 naming and binding; inter-process communication;
                 performance of communication protocols",
  abstract =     "Remote procedure calls (RPC) appear to be a useful
                 paradigm for providing communication accross a network
                 between programs written in a high-level language. This
                 paper describes a package providing a remote procedure
                 call facility, the options that face the designer of
                 such a package, and the decisions we made. We describe
                 the overall structure of our RPC mechanism, our
                 facilities for binding RPC clients, the transport level
                 communication protocol, and some performance
                 measurements. We include descriptions of some
                 optimizations used to achieve high performance and to
                 minimize the load on server machines that have many
                 clients.",
  bibdate =      "Thu Jan 15 14:59:58 1987",
  owner =        "manning",
}

@TechReport{BIRRELL88,
  key =          "Birrell et al.",
  author =       "A. D. Birrell and M. B. Jones and E. P. Wobber",
  title =        "A Simple and Efficient Implementation for Small
                 Databases",
  number =       "24",
  institution =  "Digital Systems Research Center",
  address =      "Palo Alto, CA",
  year =         "1988",
  month =        jan,
  bibdate =      "Tue Jun 28 16:19:53 1988",
}

@PhdThesis{BISHOP77,
  key =          "Bishop",
  author =       "Peter B. Bishop",
  title =        "Computer Systems with a Very Large Address Space and
                 Garbage Collection",
  school =       "Massachusetts Institute of Technology",
  month =        may,
  year =         "1977",
  number =       "LCS TR-178",
}

@InProceedings{BLACK83,
  key =          "Black",
  author =       "A. P. Black",
  title =        "An Asymmetric Stream Communication System",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Bretton Woods, NH",
  month =        oct,
  year =         "1983",
  pages =        "4--10",
  abstract =     "Input and output are often viewed as complementary
                 operations, and it is certainly true that the direction
                 of data flow during input is the reverse of that during
                 output. However, in a conventional operating system,
                 the direction of control flow is the same for both
                 input and output: the program plays the active role,
                 while the operating system transput primitives are
                 always passive. Thus there are four primitive transput
                 operations, not two: the corresponding pairs are
                 passive input and active output, and active input and
                 passive output. This paper explores the implications of
                 this idea in the context of an object oriented
                 operating system.",
  annote =       "Andrew Black, involved with the Eden system at the
                 University of Washington, argues that input and output
                 can be broken into four primitive transput operations:
                 the corresponding pairs are passive input and active
                 output, and active input and passive output.",
  bibdate =      "Fri Feb 1 11:47:22 1985",
}

@Article{BLACK87,
  key =          "Black et al.",
  author =       "A. Black and N. Hutchinson and E. Jul and H. Levy and
                 L. Carter",
  title =        "Distribution and Abstract Types in Emerald",
  journal =      "Transactions on Software Engineering",
  publisher =    "IEEE",
  volume =       "SE-13",
  number =       "1",
  month =        jan,
  year =         "1987",
  pages =        "65--76",
  keywords =     "Abstract data types; distributed operating system;
                 distributed programming; object-oriented programming;
                 process migration; type checking",
  abstract =     "Emerald is an object-based language for programming
                 distributed subsystems and applications. Its novel
                 features include 1) a single object model that is used
                 both for programming in the small and in the large, 2)
                 support for abstract types, and 3) an explicit notion
                 of object location and mobility. This paper outlines
                 the goals of Emerald, relates Emerald to previous work,
                 and describes its type system and distribution support.
                 We are currently construcing a prototype implementation
                 of Emerald.",
  bibdate =      "Wed Jan 7 12:30:48 1987",
  owner =        "manning",
}

@Article{BOBROW72,
  key =          "Bobrow, et al.",
  author =       "D. B. Bobrow and J. D. Burchfiel and D. L Murphy and
                 R. S. Tomlinsom",
  title =        "Tenex, a Paged Time Sharing System for the {PDP}-10",
  journal =      cacm,
  volume =       "15",
  number =       "3",
  year =         "1972",
  pages =        "135--143",
  bibdate =      "Mon Jul 23 15:04:51 1984",
}

@Article{BOIES74,
  key =          "Boies",
  author =       "B. J. Boies",
  title =        "User Behavior on an Interactive Computer System",
  journal =      "IBM Systems Journal",
  volume =       "1",
  number =       "13",
  year =         "1974",
  pages =        "2--18",
  annote =       "Discussed are observations on the usage of an
                 interactive computing system in a research environment.
                 Empirical data on the user behavior are discussed that
                 concern the duration and frequency of terminal
                 sessions,the use of language processors, user response
                 time, and command usage. Conclusions are 1) a large
                 number of users know and use only a few commands, or
                 the simplest form of the commands, 2) there were many
                 cases in which a user would issue a REDIT command while
                 operating in the TSS/360 state, or issue a TSS/360
                 command while operating in the REDIT state, 3) the high
                 usage of text-editing commands suggests the importances
                 of having a smoothly working text editor on any general
                 purpose interactive system, and 4) users seldom need
                 the interactive error correction features of language
                 processors (FORTRAN and Assembler Language).",
  bibdate =      "Tue Jul 24 08:13:52 1984",
}

@Article{BRINCHHANSEN70,
  key =          "Brinch Hansen",
  author =       "P. Brinch Hansen",
  title =        "The Nucleus of a Multiprogramming System",
  journal =      cacm,
  volume =       "13",
  number =       "4",
  month =        apr,
  year =         "1970",
  pages =        "238--250",
  bibdate =      "Tue Jan 24 11:02:16 1984",
}

@Article{BRINCHHANSEN75,
  key =          "Brinch-Hansen",
  author =       "P. Brinch Hansen",
  title =        "The Programming Language Concurrent Pascal",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE",
  number =       "1",
  year =         "1975",
  pages =        "199--207",
}

@Article{BRINCHHANSEN78A,
  key =          "Brinch-Hansen",
  author =       "P. Brinch-Hansen",
  title =        "Distributed Processes: {A} Concurrent Programming
                 Concept",
  journal =      cacm,
  month =        nov,
  year =         "1978",
  volume =       "21",
  number =       "11",
}

@Article{BRINCHHANSEN80,
  key =          "Brinch Hansen",
  author =       "P. Brinch Hansen",
  title =        "The Trio Operating System",
  journal =      "Software-Practice and Experience",
  volume =       "10",
  year =         "1980",
  pages =        "943--948",
  annote =       "This paper is an overview of the Trio system which
                 enables users to simultaneously develop and execute
                 programs at three terminals. The system consists of an
                 operating system written in Concurrent Pascal and a set
                 of standard programs written in Sequential Pascal. The
                 system has been used on a PDP 11/55 minicomputer since
                 spring 1979. This work concludes 5 years of experience
                 with the first abstract language for concurrent
                 programming. [abstract]",
  bibdate =      "Mon Jul 18 17:03:30 1983",
}

@Article{BRINCHHANSEN81A,
  key =          "Brinch Hansen",
  author =       "P. Brinch Hansen",
  title =        "Edison: a multiprocessor language",
  journal =      "Software Practice and Experience",
  volume =       "11",
  number =       "4",
  month =        apr,
  year =         "1981",
  pages =        "325--361",
  bibdate =      "Fri Jul 8 16:44:09 1983",
}

@Article{BRINCHHANSEN81B,
  key =          "Brinch Hansen",
  author =       "P. Brinch Hansen",
  title =        "Edison Programs",
  journal =      "Software-Practice and Experience",
  volume =       "11",
  year =         "1981",
  pages =        "397--414",
  annote =       "This paper describes three sample programs written in
                 the programming language Edison. These programs
                 illustrate the practical use of modules, concurrent
                 statements, and input/output operations. The paper
                 concludes with a brief overview of the Emono operating
                 system and the Edison compiler, both of which are
                 written entirely in Edison. [abstract]",
  bibdate =      "Mon Jul 18 17:05:35 1983",
}

@Article{BRINCHHANSEN83B,
  key =          "Brinch Hansen",
  author =       "P. Brinch Hansen",
  title =        "Using Personal Computers in Operating System Courses",
  journal =      "opsysrev",
  volume =       "17",
  number =       "3",
  month =        jul,
  year =         "1983",
  pages =        "41--50",
  abstract =     "By using personal computers it is now possible to make
                 operating system courses for computer science students
                 as practical as compiler courses. This paper describes
                 a course in which undergraduates use the programming
                 language Edison to build operating systems for IBM
                 Personal Computers.",
  bibdate =      "Mon Aug 1 17:15:46 1983",
}

@Article{BROWN84A,
  key =          "Brown \& Denning",
  author =       "R. L. Brown and P. J. Denning",
  title =        "Advanced Operating Systems",
  journal =      "Computer",
  publisher =    "IEEE",
  volume =       "17",
  number =       "10",
  month =        oct,
  year =         "1984",
  pages =        "173--190",
  bibdate =      "Wed Sep 2 13:14:03 1987",
  owner =        "manning",
}

@Article{BROWN85A,
  key =          "Brown et al.",
  author =       "M. R. Brown and K. N. Kolling and E. A. Taft",
  title =        "The Alpine File System",
  journal =      "ACM Transactions on Computer Systems",
  publisher =    "Association for Computing Machinery",
  volume =       "3",
  number =       "4",
  month =        nov,
  year =         "1985",
  pages =        "261--293",
  keywords =     "Design; experimentation; reliability; file servers;
                 atomic update; recoverable files; remote procedure
                 calls",
  abstract =     "Alpine is a file system that supports atomic
                 transaction and is designed to operate as a service on
                 a computer network. Alpine's primary purpose is to
                 store files that represent databases. An important
                 secondary goal is to store ordinary files representing
                 documents, program modules, and the like. Unlike other
                 file servers described in the literature, Alpine uses a
                 log-based technique to implement atomic file update.
                 Another unusual aspect of Alpine is that it performs
                 all communication via a general-purpose remote
                 procedure call facility. Both of these decisions have
                 worked out well. This paper describes Alpine's design
                 and implementation, and evaluates the system in light
                 of our experience to date. Alpine is written in Cedar,
                 a strongly typed modular programming language that
                 includes garbage-collected storage. We report on using
                 the Cedar language and programming environment to
                 develop Alpine.",
  bibdate =      "Thu Jan 15 14:05:39 1987",
  owner =        "manning",
}

@Article{BUETTNER75,
  key =          "Buettner \& Alexander",
  author =       "D. W. Buettner and M. T. Alexander",
  title =        "The Michigan Terminal System",
  journal =      "procieee",
  volume =       "63",
  number =       "6",
  year =         "1975",
  pages =        "912--918",
  annote =       "The Michigan Terminal System (MTS) is a
                 general-purpose operating system for the IBM 360 and
                 370 computers. An overview is presented of the internal
                 structure of MTS and the facilities provided to a user
                 of MTS. This includes an introduction to the command
                 language and file system, and a summary of software and
                 hardware supported. Brief descriptions of performance
                 measurement and accounting are also included.",
  bibdate =      "Tue Jul 24 14:53:27 1984",
}

@Article{CAMPBELL74,
  key =          "Campbell \& Habermann",
  author =       "R. H. Campbell and A. N. Habermann",
  title =        "The Specification of Process Scheduling by Path
                 Expressions",
  journal =      "International Symposium on Operating System Theory and
                 Practice, IRIA",
  year =         "1974",
  annote =       "A mechanism is proposed which allows the
                 synchronization between executions of procedures to be
                 specified by means of a path expression. Fundamental
                 synchronization schemes are a sequence of actions (each
                 occurs in the order specified), selection from a set of
                 actions (permit only one action to occur), repetition
                 (permits a path expression once completed to be
                 repeated), and simultaneous execution (which permits
                 several processes to execute given procedures
                 concurrently). Types are then discussed, and the
                 incorporation of path expressions into type
                 declarations is indicated. It is shown that semaphones
                 can be implemented via path expressions, and visa versa
                 cie, path expressions and semaphones are equivalent.
                 The use of path expressions removes the burden of
                 implementing any given synchronization scheme is
                 removed from the programmer, eliminating the
                 possibility of mistakes.",
  bibdate =      "Tue Jul 24 15:08:59 1984",
}

@Article{CAMPBELL87,
  key =          "Campbell et al.",
  author =       "R. Campbell and G. Johnston and V. Russo",
  title =        "Choices-Class Hierarchical Open Interface for Custom
                 Embedded Systems",
  journal =      "Operating Systems Review",
  publisher =    "Association for Computing Machinery",
  volume =       "21",
  number =       "3",
  month =        jul,
  year =         "1987",
  pages =        "9--17",
  bibdate =      "Tue Jan 12 16:58:09 1988",
  owner =        "manning",
}

@PhdThesis{CANAS83,
  key =          "Canas",
  author =       "D. A. Canas",
  title =        "Operating Systems for Reconfigurable Network
                 Architectured Systems: The Node Kernel",
  school =       "University of Texas",
  month =        may,
  year =         "1983",
  bibdate =      "Wed Oct 23 11:25:37 1985",
}

@MastersThesis{CARDOZO80,
  key =          "Cardozo",
  author =       "P. Cardozo",
  title =        "Tunis-2: {A} Unix-like portable operating system",
  school =       "Computer Science Department, University of Toronto",
  year =         "1980",
  bibdate =      "Fri Jul 8 16:48:01 1983",
}

@InProceedings{CARR81,
  key =          "Carr \& Hennessy",
  author =       "R. W. Carr and J. L. Hennessy",
  title =        "{WSC}lock - {A} Simple and Effective Algorithm for
                 virtual Memory Management",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  address =      "Pacific Grove, CA",
  month =        dec,
  year =         "1981",
  pages =        "87--95",
  abstract =     "A new virtual memory management algorithm WSClock has
                 been synthesized from the local working set (WS)
                 algorithm, the global CLOCK algorithm, and a new load
                 control mechanism for auxiliary memory access. The new
                 algorithm combines the most useful feature of WS - a
                 natural effective load control that prevents thrashing
                 - with the simplicity and efficiency of CLOCK. Studies
                 are presented to show that the performance of WS and
                 WSClock are equivalent, even if the savings in overhead
                 are ignored.",
  bibdate =      "Thu Oct 4 13:04:07 1984",
}

@TechReport{CASTILLO81,
  key =          "Castillo",
  author =       "X. Castillo",
  title =        "A Compatible Hardware/Software Reliability Prediction
                 Model",
  institution =  "Department of Electrical Engineering, Carnegie-Mellon
                 University",
  month =        jul,
  year =         "1981",
}

@Article{CHANDY84,
  key =          "Chandy \& Misra",
  author =       "K. M. Chandy and J. Misra",
  title =        "The Drinking Philosophers Problem",
  journal =      "ACM Transactions on Programming Languages and
                 Systems",
  volume =       "6",
  number =       "4",
  month =        oct,
  year =         "1984",
  pages =        "632--646",
  keywords =     "Asymmetry; dining philosophers problem",
  abstract =     "The problem of resolving conflicts between processes
                 in distributed systems is of practical importance. A
                 conflict between a set of processes must be resolved in
                 favor of some (usually one) process and against the
                 others: a favored process must have some property that
                 distinguishes it from others. To guarantee fairness,
                 the distinguishing property must be such that the
                 process selected for favorable treatment is not always
                 the same. A distributed implementation of an acyclic
                 precedence graph, in which the depth of a process (the
                 longest chain of predecessors) is a distinguishing
                 property, is presented. A simple conflict resolution
                 rule coupled with the acyclic graph ensures fair
                 resolution of all conflicts. To make the problem
                 concrete, two pardigms are presented: the well-known
                 distributed dining philosophers problem and a
                 generalization of it, the distributed drinking
                 philosophers problem.",
  bibdate =      "Thu Feb 7 12:01:54 1985",
}

@Unpublished{CHANSLER77,
  key =          "Chansler",
  author =       "Jr. Chansler R. J. and P. Sindhu",
  title =        "The Image Application on Cm*",
  note =         "Internal Memo of the StarOS Group, cmucsd",
  year =         "1977",
}

@InProceedings{CHANSLER80,
  title =        "The Structure of Cm*",
  author =       "Jr. Chansler R. J.",
  booktitle =    "The Cm* Multiprocessor Project: A Research Review,
                 Eds. Jones and Gehringer",
  year =         "1980",
  month =        jul,
  organization = "Computer Science Department, Carnegie-Mellon
                 University",
  key =          "Chansler",
}

@PhdThesis{CHANSLER82A,
  key =          "Chansler",
  author =       "Jr. Chansler R. J.",
  title =        "Coupling in Systems with Many Processors",
  year =         "1982",
  month =        aug,
}

@TechReport{CHANSLER82B,
  key =          "Chansler",
  author =       "Jr. Chansler R. J.",
  title =        "Star{OS} Six12",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jul,
  year =         "1982",
  note =         "in @cite[StarOSManual]",
}

@Article{CHERITON79,
  title =        "Toth, a Portable Real-Time Operating System",
  author =       "D. R. Cheriton and M. A. Malcolm and L. S. Melen and
                 G. R. and Sager",
  key =          "Cheriton et al.",
  journal =      "Communications of the Association of Computing
                 Machinery",
  month =        feb,
  year =         "1979",
  volume =       "22",
  number =       "2",
  pages =        "105--115",
}

@Book{CHERITON82,
  key =          "Cheriton",
  author =       "D. R. Cheriton",
  title =        "The Thoth System: Multi-Process Structuring and
                 Partability",
  publisher =    "Elsevier",
  address =      "North Holland",
  year =         "1982",
  abstract =     "The objective was to test two major hypotheses about
                 computer systems. First, we believed that processes
                 could provide a powerful way for structuring programs
                 given a suitable program execution environment. This
                 structuring technique was referred to as the
                 multi-process structuring of programs. Second, we
                 believed that an operating system could be designed and
                 implemented such that it would be cost effective to
                 transport the system software and associated
                 application software to a large number of existing
                 computers in preference to developing new and different
                 software for each machine. That is a system could be
                 designed to be portable.",
  bibdate =      "Fri Dec 16 16:04:21 1983",
}


@Article{CHERITON88,
  key =          "Cheriton",
  author =       "D. R. Cheriton",
  title =        "The {V} Distributed System",
  journal =      "Communications of the Association of Computing
                 Machinery",
  publisher =    "Association for Computing Machinery",
  volume =       "31",
  number =       "3",
  month =        mar,
  year =         "1988",
  pages =        "314--333",
  bibdate =      "Thu May 26 17:11:03 1988",
  owner =        "manning",
}

@TechReport{CLARKE82C,
  key =          "Clarke et al.",
  author =       "L. A. Clarke and J. C. Wileden and A. L. Wolf",
  title =        "Introduction to a Unified Treatment of Interface
                 Control and Program Structure",
  number =       "82-32",
  institution =  "University of Massachusetts",
  year =         "1982",
  month =        dec,
  bibdate =      "Thu Oct 17 10:03:25 1985",
}

@TechReport{CMUCSD,
  key =          "Computer Science Department, Carnegie-Mellon
                 University",
  author =       "Carnegie-Mellon University Computer Science
                 Department",
  title =        "Proposal for a Joint Effort in Personal Scientific
                 Computing",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        aug,
  year =         "1979",
}

@InProceedings{COHEN75,
  author =       "E. Cohen and D. Jefferson",
  key =          "Cohen \& Jefferson",
  title =        "Protection in the Hydra operating system",
  booktitle =    "Proceedings of the Fifth Symposium on Operating
                 Systems Principles",
  address =      "University of Texas at Austin",
  organization = "ACM/SIGOPS",
  month =        nov,
  year =         "1975",
  note =         "ACM Operatng Systems Review, 9:5",
  pages =        "141--60",
}

@Article{COHEN82,
  key =          "Cohen",
  author =       "E. Cohen",
  title =        "Text-Oriented Structure Commands for Structure
                 Editors",
  journal =      "ACM SIGPlan Notices",
  volume =       "17",
  number =       "11",
  month =        nov,
  year =         "1982",
  pages =        "45--49",
  keywords =     "editor, structure editor, emacs, Myte",
  abstract =     "The main problems associated with program structure
                 editors are not inherent and can be solved without
                 reverting to a textual view point. Cursor movements can
                 be made more natural by viewing the screen as a 2-D
                 arrangement of nodes. Expressions can be input to
                 commands more complex than simple template expansion.
                 Transformations of program fragments can be
                 accomplished by an editor which supports matching and
                 instantiation of subtrees.",
  bibdate =      "Tue Jan 10 10:19:23 1984",
}

@InProceedings{COOK79,
  key =          "Cook",
  author =       "R. P. Cook",
  title =        "*Mod - {A} Language for Distributed Programming",
  organization = "IEEE",
  booktitle =    "Proceedings of the First International Conference on
                 Distributed Computing Systems, Huntsville, Alabama",
  year =         "1979",
  month =        oct,
  pages =        "223--241",
}

@TechReport{COOK83,
  key =          "Cook et al",
  author =       "R. Cook and R. Finkel and B. Gerber and D. DeWitt and
                 L. Landweber",
  title =        "The Crystal Nuggetmaster Part {II} of the First Report
                 on The Crystal Project",
  number =       "500",
  institution =  "University of Wisconsin",
  year =         "1983",
  month =        apr,
  bibdate =      "Thu Oct 17 09:50:36 1985",
}

@TechReport{COOK83A,
  key =          "Cook et al.",
  author =       "R. Cook and R. Finkel and D. DeWitt and L. Landweber
                 and T. Virgilio",
  title =        "The Crystal Nugget Part {I} of the First Report on The
                 Crystal Project",
  number =       "499",
  institution =  "University of Wisconsin",
  year =         "1983",
  month =        apr,
  bibdate =      "Thu Oct 17 09:52:35 1985",
}

@InProceedings{COOPER87,
  key =          "Cooper \& Jones",
  author =       "E. C. Cooper and M. B. Jones",
  title =        "An Object-Oriented Approach to Remote Procedure Call
                 Stub Generation for Heterogeneous Environments",
  booktitle =    "Proceedings from the Second Workshop on Large-Grained
                 Parallelism",
  organization = "Software Engineering Institute",
  address =      "Carnegie-Mellon University, Pittsburgh, PA",
  editor =       "J. Wing and M. Herlihy and M. R. Barbacci",
  month =        nov,
  year =         "1987",
  volume =       "CMU/SEI-87-SR-5",
  pages =        "20--22",
  bibdate =      "Mon Feb 15 11:47:32 1988",
  owner =        "manning",
}

@PhdThesis{COOPRIDER79,
  key =          "Cooprider",
  author =       "L. W. Cooprider",
  title =        "The Representation of Families of Software Systems",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        apr,
  year =         "1979",
  keywords =     "software system, family of systems, module
                 interconnection, software engineering database, system
                 description language, software construction, version,
                 automated programming, mainenance",
  bibdate =      "Sun Aug 7 18:41:14 1983",
  owner =        "Rick Snodgrass",
}

@TechReport{CORBIN71,
  key =          "Corbin et al.",
  author =       "K. Corbin and W. Corwin and R. Goodman and E. Hyde and
                 K. Kramer and E Werme and W. Wulf",
  title =        "A Software Laboratory, Preliminary Report",
  number =       "71-104",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1971",
  month =        aug,
  annote =       "This report describes the implementation of the kernel
                 of a simple multi-process operating system. The purpose
                 of this system is to create an environment for the
                 construction of experimental programming systems for
                 educational and research uses. [abstract]",
  bibdate =      "Mon Jul 18 17:12:31 1983",
}

@PhdThesis{CORKILL82,
  key =          "Corkill",
  author =       "D. D. Corkill",
  title =        "A Framework for Organizational Self-Design in
                 Distributed Problem Solving Networks",
  school =       "University of Massachusetts",
  month =        dec,
  year =         "1982",
  bibdate =      "Wed Oct 23 11:26:57 1985",
}

@Article{CORRIGAN84,
  key =          "Corrigan \& Starkey",
  author =       "N. B. Corrigan and J. D. Starkey",
  title =        "A Concurrent General Purpose Operator Interface",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-10",
  number =       "6",
  month =        nov,
  year =         "1984",
  pages =        "738--748",
  keywords =     "Computer graphics; Concurrent Pascal; concurrent
                 programming; interactive system; man-machine interface;
                 operator interface; process control",
  abstract =     "Compact interactive control consoles are replacing
                 traditional control rooms as operator interfaces for
                 physical processes. In the first major application of
                 concurrent programming outside the area of operating
                 systems, this paper presents a design for a general
                 purpose operator interface which uses a color graphics
                 terminal with a touch-sensitive screen as the control
                 console. Operators interact with a process through a
                 collection of application-dependent displays generated
                 inter-actively by users familiar with the physical
                 process. The use of concurrent programming results in a
                 straightforward and reliable design which may easily be
                 extended to support multiple devices of varying types
                 in the control console. An implementation of the
                 Operator Interface in Concurrent Pascal currently in
                 progress is also discussed.",
  bibdate =      "Mon Feb 11 11:00:54 1985",
}

@TechReport{CORWIN72,
  key =          "Corwin \& Wulf",
  author =       "W. Corwin and W. Wulf",
  title =        "{SL230}--{A} Software Laboratory, Intermediate
                 Report",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1972",
  month =        may,
  annote =       "This report describes the resources and data
                 structures of SL230 (Software Laboratory 230) and the
                 designing of SL230 modules and systems. SL230 is a
                 simple, multiprocess, operating system used to create
                 an environment suitable for the construction of
                 experimental programming systems for educational and
                 research uses. [abstract]",
  bibdate =      "Mon Jul 18 17:09:04 1983",
}

@PhdThesis{CORWIN82,
  key =          "Corwin",
  title =        "The Scheduling of Primary Memory in a Multiprocessor",
  author =       "W. Corwin",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  note =         "In preparation",
  year =         "1982",
}

@Article{COURTOIS71,
  key =          "Courtois et al",
  author =       "P. J. Courtois and F. Heymans and D. L. and Parnas",
  title =        "Concurrent Control with Readers and Writers",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "14",
  number =       "10",
  month =        oct,
  year =         "1971",
  pages =        "667--668",
  bibdate =      "Fri Jan 6 13:29:09 1984",
}

@InBook{COWAN75,
  key =          "Cowan",
  author =       "R. M. Cowan",
  title =        "Burroughs {B6700}/b7700 Work Flow Language",
  booktitle =    "Command Languages",
  year =         "1975",
  annote =       "This paper describes the Work Flow Language (WFL), a
                 language extension which introduces the concept of a
                 task variable, a data structure used to represent a
                 given task and all its attributes. Using the task
                 variable and a set of initialization operations, a very
                 powerful mechanism known as Inter-Program Communication
                 (IPC) is possible.",
  bibdate =      "Wed Jul 25 08:49:20 1984",
}

@Article{COX83,
  key =          "Cox, et al.",
  author =       "W. M. Cox {G. W., Corwin} and K. L. Konrad and F. J.
                 Pollack",
  title =        "Interprocess Communication and Processor Dispatching
                 on the Intel 432",
  journal =      "ACM Transactions on Computer Systems",
  volume =       "1",
  number =       "1",
  month =        feb,
  year =         "1983",
  pages =        "45--66",
  abstract =     "A unified facility for interprocess communication and
                 processor dispatching on the Intel 432 is described.
                 The facility is based on a queuing and binding
                 mechanism called a port. The goals and motivations for
                 ports, both abstract and implementation views of them,
                 and their absolute and comparative performance are
                 described.",
  bibdate =      "Fri Oct 12 14:02:53 1984",
}

@InProceedings{CRAFT83,
  key =          "Craft",
  author =       "D. H. Craft",
  title =        "Resource Management In {A} Decentralized System",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Bretton Woods, NH",
  month =        oct,
  year =         "1983",
  pages =        "11--19",
  abstract =     "The heterogeneous collection of machines constituting
                 the Processor Bank at Cambridge represents an important
                 set of resources which must be managed. The Resource
                 Manager incorporates these machines into a wider view
                 of resources in a network. It will accept existing
                 resources and specifications for constructing others
                 from existing ones. It will then allocate these to
                 clients on demand, combining existing resources as
                 necessary. Resource management in a decentralized
                 system presents interesting problems: the resources are
                 varied and of a multi-level nature; they are available
                 at different locations from where they are required;
                 the stock of available resources varies dynamically;
                 and the underlying system is in constant flux.",
  bibdate =      "Fri Feb 1 11:49:59 1985",
}

@TechReport{CZARNIK73,
  key =          "Czarnik et al.",
  author =       "Czarnik, B. (ed.) and D. Tsichritzis and A. J. Ballard
                 and H. Dryer and R. C. Holt and L. Weissman",
  title =        "A student project for an operating systems course",
  number =       "CSRG-29",
  institution =  "Computer Systems Research Group, University of
                 Toronto",
  year =         "1973",
  bibdate =      "Fri Jul 8 16:33:08 1983",
}

@Article{DALEY68,
  key =          "Daley \& Dennis",
  author =       "R. C. Daley and J. B. Dennis",
  title =        "Virtual Memory Processes, and Sharing in {MULTICS}",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "11",
  number =       "5",
  month =        may,
  year =         "1968",
  pages =        "306--312",
  bibdate =      "Fri Jan 6 14:01:00 1984",
}

@PhdThesis{DANNENBERG82,
  key =          "Dannenberg",
  author =       "R. B. Dannenberg",
  title =        "Resource Sharing In {A} Network Of Personal
                 Computers",
  school =       "Carnegie-Mellon University",
  month =        dec,
  year =         "1982",
  bibdate =      "Wed Oct 23 11:27:55 1985",
}

@TechReport{DANNENBURG81,
  key =          "Dannenberg",
  author =       "R. B. Dannenberg",
  title =        "{AMPL}: Design, Implementation, and Evaluation of {A}
                 Multprocessing Language",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1981",
  month =        mar,
  bibdate =      "Wed Dec 29 20:06:39 1982",
}

@MastersThesis{DAVIS82,
  key =          "Davis",
  author =       "I. J. Davis",
  title =        "Towards reliable file systems",
  school =       "Computer Science Department, University of Toronto",
  year =         "1982",
  bibdate =      "Fri Jul 8 16:48:30 1983",
}

@TechReport{DEMINET80,
  key =          "Deminet",
  author =       "J. Deminet",
  title =        "Cm* Guide for Everyone",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        sep,
  year =         "1980",
  note =         "unpublished.",
}

@Article{DENNING70,
  key =          "Denning",
  author =       "P. J. Denning",
  title =        "Virtual Memory",
  journal =      "comp surv.",
  volume =       "2",
  number =       "3",
  year =         "1970",
  bibdate =      "Wed Jul 25 10:20:21 1984",
}

@Article{DENNING71,
  key =          "Denning",
  author =       "P. J. Denning",
  title =        "Third Generation Computer Systems",
  journal =      "compsurv",
  month =        dec,
  year =         "1971",
  pages =        "175--216",
  bibdate =      "Thu Jan 12 16:02:26 1984",
}

@Article{DENNING76,
  key =          "Denning",
  author =       "D. E. Denning",
  title =        "A Lattice Model of Secure Information Flow",
  journal =      "Communications of the Association of Computing
                 Machinery",
  month =        may,
  year =         "1976",
  bibdate =      "Thu Jan 12 16:12:25 1984",
}

@Article{DENNING76B,
  key =          "Denning",
  author =       "P. J. Denning",
  title =        "Fault Tolerant Operating Systems",
  journal =      "compsurv",
  volume =       "8",
  number =       "4",
  month =        dec,
  year =         "1976",
  pages =        "359--389",
  bibdate =      "Tue Jan 24 10:33:30 1984",
}

@Article{DENNING78A,
  key =          "Denning",
  author =       "P. J. Denning",
  title =        "The Operational Analysis of Queueing Network Models",
  journal =      "compsurv",
  month =        sep,
  year =         "1978",
  pages =        "225--261",
  bibdate =      "Thu Jan 12 16:13:26 1984",
}

@Article{DENNING80,
  key =          "Denning",
  author =       "P. J. Denning",
  title =        "Working Sets: Past and Present",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-6",
  number =       "1",
  month =        jan,
  year =         "1980",
  pages =        "64--84",
}

@Article{DENNIS66,
  key =          "Dennis \& Van Horn",
  author =       "J. Dennis and E. Van Horn",
  title =        "Programming Semantics for Multiprogrammed
                 Computations",
  journal =      "Communications of the Association of Computing
                 Machinery",
  month =        mar,
  year =         "1966",
  pages =        "143--155",
  annote =       "The first introduction of protection and
                 capabilities.",
  bibdate =      "Thu Jan 12 16:04:02 1984",
}

@Article{DIJKSTRA65,
  key =          "Dijkstra",
  author =       "E. W. Dijkstra",
  title =        "Solution of a Problem in Concurrent Programming
                 Control",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "8",
  number =       "9",
  year =         "1965",
  pages =        "569",
  bibdate =      "Wed Jul 25 10:26:19 1984",
}

@InBook{DIJKSTRA68,
  key =          "Dijkstra",
  author =       "E. Dijkstra",
  title =        "Cooperating Sequential Processes",
  booktitle =    "Programming Languages",
  publisher =    "Academic Press",
  year =         "1968",
  bibdate =      "Fri Jan 6 13:34:56 1984",
}


@Article{DIJKSTRA71,
  key =          "Dijkstra",
  author =       "E. W. Dijkstra",
  title =        "Hierarchical Ordering of Sequential Processes",
  journal =      "Acta Informatica",
  volume =       "1",
  year =         "1971",
  pages =        "115--138",
  abstract =     "One of the primary functions of an operating system is
                 to rebuild a machine that must be regarded as
                 non-deterministic (on account of cycle stealing and
                 interrupts) into a more or less deterministic
                 automaton. Taming the degree of indeterminacy in steps
                 will lead to a layered operating system. A bottom layer
                 will be discussed and so will the adequacy of the
                 interface it presents. An analysis of the requirements
                 of the correctness proofs will give us an insight into
                 the logical issues at hand. A 'director-secretary'
                 relationship will be introduced to reflext a possible
                 discipline in the use of sequencing primitives.",
  bibdate =      "Sun Jan 15 17:52:42 1984",
}

@InProceedings{DURHAM79,
  key =          "Durham et al.",
  author =       "I. Durham and R. C. Dugan and A. K. Jones and S. N.
                 Talukdar",
  title =        "Power system simulation on a multiprocessor",
  booktitle =    "Text of abstracts, Summer Power Meeting",
  organization = "IEEE Power Engineering Society",
  year =         "1979",
}

@TechReport{EAGER84,
  key =          "Eager et al.",
  author =       "D. L. Eager and E. D. Lazowska and J. Zahorjan",
  title =        "Dynamic Load Sharing in Homogeneous Distributed
                 Systems",
  number =       "3",
  institution =  "University of Washington",
  year =         "1984",
  month =        oct,
  keywords =     "design; performance; load sharing; threshold policies;
                 queuing models; local area networks",
  bibdate =      "Thu Mar 14 12:29:58 1985",
}

@Unpublished{ENGLAND73A,
  key =          "England",
  author =       "D. M. England",
  title =        "Operating System of System 250",
  note =         "Note 1S5",
  year =         "1973",
  abstract =     "This paper describes the OS of the Plessey System 250
                 in terms of a series of abstractions, starting from the
                 store allocator/manager, working up through the process
                 allocator/manager, and ending with the command
                 interpreter and the user code. The command interpreter
                 consists primarily of a symbol table, which refers to
                 capabilities and data values. The capabilities can
                 refer to either resources provided by the abstract
                 machine provided by the OS, or command programs, which
                 are comprsied of existing commands.",
}

@Unpublished{ENGLAND73B,
  key =          "England",
  author =       "D. M. England",
  title =        "Architectual Features of System 250",
  note =         "Plessey Telecommunications Research internal
                 document",
  year =         "1973",
}

@InProceedings{ENGLAND74,
  author =       "D. M. England",
  key =          "England",
  title =        "Capability concept mechanisms and structure in System
                 250",
  booktitle =    "International Workshop on Protection in Operating
                 Systems",
  organization = "IRIA/LABORIA",
  address =      "Rocquencourt, France",
  month =        aug # " 13-14",
  year =         "1974",
  pages =        "63--82",
}

@TechReport{ESSICK87,
  key =          "Essick",
  author =       "IV Essick R. B.",
  title =        "The Cross-Architecture Procedure Call",
  number =       "UIUCDCS-R-87-1340",
  institution =  "Department of Computer Science",
  address =      "University of Illnois at Urbana-Champaign, Urbana,
                 IL",
  year =         "1987",
  month =        may,
  pages =        "1--144",
  bibdate =      "Thu Aug 6 10:21:50 1987",
  owner =        "manning",
}

@Article{FABRY74A,
  key =          "Fabry",
  author =       "R. S. Fabry",
  title =        "Capability-Based Addressing",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "17",
  number =       "7",
  year =         "1974",
  pages =        "403--411",
  annote =       "The direct use of a capability as an address is shown
                 to be useful when dealing with shared addresses.
                 Implementation of capability- based addressing is
                 discussed.",
  bibdate =      "Wed Jul 25 10:49:13 1984",
}

@Article{FAJMAN73,
  key =          "Fajman \& Borgelt",
  author =       "R. Fajman and J. Borgelt",
  title =        "{WYLBUR}: An Interactive Editing and Remote Job Entry
                 System",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "16",
  number =       "5",
  year =         "1973",
  abstract =     "WYLBUR is a comprehensive system for manipulating all
                 kinds of text. It has facilities for remote job entry
                 and retrieval as well as facilities for text alignment
                 and justification. A powerful method of addressing text
                 by context is provided. This paper describes the
                 external appearance of WYLBUR as well as its internal
                 structure. A short description of the major features of
                 ORVYL, a general-purpose time-sharing system which
                 operates in conjunction with WYLBUR, is also
                 included.",
  bibdate =      "Wed Jul 25 11:26:11 1984",
}

@Article{FAULK88,
  key =          "Faulk \& Parnas",
  author =       "S. R. Faulk and D. L. Parnas",
  title =        "On Synchronization in Hard-Real-Time Systems",
  journal =      "Communications of the Association of Computing
                 Machinery",
  publisher =    "Association for Computing Machinery",
  volume =       "31",
  number =       "3",
  month =        mar,
  year =         "1988",
  pages =        "274--287",
  bibdate =      "Thu May 26 17:08:00 1988",
  owner =        "manning",
}

@Article{FELDMAN79A,
  key =          "Feldman",
  author =       "J. A. Feldman",
  title =        "High Level Programming for Distributed Computing",
  journal =      "Communications of the Association of Computing
                 Machinery",
  month =        jun,
  year =         "1979",
  volume =       "22",
  number =       "6",
}

@MastersThesis{FISHER86,
  key =          "Fisher",
  author =       "F. A. Fisher",
  title =        "A Family of Operating Systems in a Software
                 Laboratory",
  school =       "Computer Science Department, University of North
                 Carolina at Chapel Hill",
  month =        jan,
  year =         "1986",
  keywords =     "SoftLab, operating systems, Modula2",
  abstract =     "Due to the size of operating systems, and their
                 sensitive, protected position in day to day computer
                 operations, the absence of any kinds of hands-on
                 experience with operating systems is a weakness common
                 to almost all first courses in operating systems. A
                 family of operating systems, intended for pedagogical
                 use, is shown to create an environment in which
                 operating system design experience may be gained, after
                 the manner of a laboratory science. Two operating
                 systems are presented, as the nucleus of such a family,
                 though more may be added; each operating system is
                 highly modular and well documented, and is supplied
                 with a set of suggested experiments and assignments.",
  bibdate =      "Tue Jan 14 20:25:02 1986",
  owner =        "faf",
}

@Article{FISHER86A,
  key =          "Fisher \& Weatherly",
  author =       "D. A. Fisher and R. M. Weatherly",
  title =        "Issues in the Design of a Distributed Operating System
                 for Ada",
  journal =      "Computer",
  publisher =    "IEEE",
  volume =       "19",
  number =       "5",
  month =        may,
  year =         "1986",
  pages =        "38--47",
  bibdate =      "Tue Jan 20 13:45:09 1987",
  owner =        "manning",
}

@Proceedings{FRIDRICH81,
  key =          "Fridrich \& Older",
  title =        "The Felix File Server",
  organization = "Bell-Northern Research",
  publisher =    "Association for Computing Machinery",
  author =       "M. Fridrich and W. Older",
  abstract =     "This paper describes Felix - a File Server for an
                 experimental distributed multicomputer system. Felix is
                 designed to support a variety of file systems, virtual
                 memory, and database applications with access being
                 provided by a local area network. Its interface
                 combines block oriented data access with a high degreee
                 of crash resistance and a comprehensive set of
                 primitives for controlling data sharing and
                 consistency. An extended set of access modes allows
                 increased concurrency over conventional systems.",
  bibdate =      "Thu Oct 4 12:49:53 1984",
}

@TechReport{FULLER77A,
  key =          "Fuller et al.",
  author =       "S. H. Fuller and A. K. Jones and I. [eds.] Durham",
  title =        "Cm* Review, June 1977",
  year =         "1977",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
}

@Article{GAINES75,
  key =          "Gaines \& Facey",
  author =       "B. R. Gaines and P. V. Facey",
  title =        "Some Experience in Interactive System Development and
                 Application",
  journal =      "procieee",
  volume =       "63",
  number =       "6",
  year =         "1975",
  pages =        "894--911",
  bibdate =      "Wed Jul 25 14:52:10 1984",
}

@TechReport{GARFINKEL86,
  key =          "Garfinkel \& Love",
  author =       "S. Garfinkel and J. Love",
  title =        "A File System for Write-Once Media",
  institution =  "MIT Media Lab",
  month =        oct,
  year =         "1986",
  bibdate =      "Tue Nov 7 09:28:00 1989",
  owner =        "robyn",
}

@InProceedings{GEHRINGER79,
  author =       "E. F. Gehringer",
  key =          "Gehringer",
  title =        "Variable-length capabilities as a solution to the
                 small-object problem",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  address =      "Aslomar Conference Grounds, Pacific Grove, Calfornia",
  organization = "ACM/SIGOPS",
  month =        dec,
  year =         "1979",
  pages =        "131--42",
}

@TechReport{GEHRINGER81A,
  key =          "Gehringer et al.",
  author =       "E. F. Gehringer and Jr. Chansler R. J. and M. Kazar",
  title =        "Star{OS} User and System Structure Manual, Loader and
                 Process Creator",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jun,
  year =         "1981",
}

@TechReport{GEHRINGER81B,
  key =          "Gehringer et al.",
  author =       "E. F. Gehringer and Jr. Chansler R. J. and J. Mohan",
  title =        "Star{OS} User and System Structure Manual, The
                 Schedulers and Multiplexor",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jun,
  year =         "1981",
}

@TechReport{GEHRINGER81C,
  key =          "Gehringer et al.",
  author =       "E. F. Gehringer and Jr. Chansler R. J. and I. Durham",
  title =        "Star{OS} User and System Structure Manual, Object
                 Management",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jun,
  year =         "1981",
}

@TechReport{GEHRINGER81D,
  key =          "Gehringer \& Chansler",
  author =       "E. F. Gehringer and Jr. Chansler R. J.",
  title =        "Star{OS} User and System Structure Manual, Programmers
                 Guide",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jun,
  year =         "1981",
}

@TechReport{GEHRINGER81E,
  key =          "Gehringer et al.",
  author =       "E. F. Gehringer and Jr. Chansler R. J. and I. Durham",
  title =        "Star{OS} User and System Structure Manual,
                 Reconfiguration",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jun,
  year =         "1981",
}

@TechReport{GEHRINGER82,
  key =          "Gehringer \& Chansler",
  author =       "E. F. Gehringer and Jr. Chansler R. J.",
  title =        "Star{OS} User and System Structure Manual",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jul,
  year =         "1982",
}

@Book{GEHRINGER87,
  key =          "Gehringer et al.",
  author =       "E. F. Gehringer and D. P. Siewiorek and Z. Segall",
  title =        "Parallel Processing: The {CM}* Experience",
  publisher =    "Digital Press",
  year =         "1987",
  ISBN =         "0-932376-91-6",
  bibdate =      "Fri Jul 24 16:58:01 1987",
  owner =        "manning",
}

@Article{GERMAN84,
  key =          "German",
  author =       "S. M. German",
  title =        "Monitoring for Deadlock and Blocking in Ada Tasking",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-10",
  number =       "6",
  month =        nov,
  year =         "1984",
  pages =        "764--777",
  keywords =     "Concurrent algoritms; concurrent programming
                 languages; correctness proofs of concurrent programs;
                 deadlock detection; exceptions; program
                 transformations; semantics of Ada tasking; state graph
                 models; task identifiers",
  bibdate =      "Mon Feb 11 11:17:34 1985",
}

@Article{GIBBONS87,
  key =          "Gibbons",
  author =       "P. B. Gibbons",
  title =        "A Stub Generator for Multilanguage {RPC} in
                 Heterogeneous Environments",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-13",
  number =       "1",
  month =        jan,
  year =         "1987",
  pages =        "77--87",
  keywords =     "Argument marshalling; distributed systems;
                 heterogeneous environments; interface specification
                 language; interlanguage procedure call; remote
                 procedure call; stub genertor",
  abstract =     "A stub generator for marshalling the arguments and
                 results of remote procedure calls in heterogeneous
                 environments is presented. The stub generator is itself
                 language and machine independent, and derives all its
                 knowledge of source languages and machine types from a
                 set of language and machine specifications. These
                 specifications can be paired in any combination to
                 accommodate interlanguage calls between differing
                 machines.",
  bibdate =      "Wed Jan 7 12:36:07 1987",
  owner =        "manning",
}

@Article{GIFFORD88,
  key =          "Gifford et al.",
  author =       "D. K. Gifford and R. M. Needham and M. D. Schroeder",
  title =        "The Cedar File System",
  journal =      "Communications of the Association of Computing
                 Machinery",
  publisher =    "Association for Computing Machinery",
  volume =       "31",
  number =       "3",
  month =        mar,
  year =         "1988",
  pages =        "288--298",
  bibdate =      "Thu May 26 17:09:12 1988",
  owner =        "manning",
}

@Book{GOLDBERG83,
  key =          "Goldberg \& Robson",
  author =       "A. J. Goldberg and D. Robson",
  title =        "Smalltalk-80: The Language and its Implementation",
  publisher =    "Addison-Wesley",
  year =         "1983",
  bibdate =      "Thu Nov 1 23:13:20 1984",
}

@TechReport{GOOS81,
  key =          "Goos \& Wulf",
  author =       "G. Goos and W. A. Wulf",
  title =        "Diana Reference Manual",
  number =       "CMU-CS-81-101",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1981",
  month =        mar,
  note =         "Descriptive Intermediate Attributed Notation for Ada",
  bibdate =      "Wed Dec 29 16:45:59 1982",
}

@Article{GRAY86,
  key =          "Gray",
  author =       "J. N. Gray",
  title =        "An Approach to Decentralized Computer Systems",
  journal =      "IEEE Transactions on Software Engineering",
  publisher =    "IEEE",
  volume =       "SE-12",
  number =       "6",
  month =        jun,
  year =         "1986",
  pages =        "684--692",
  keywords =     "Database; network; requestor; server",
  abstract =     "The technology for distributed computing is available.
                 However, decentralized systems still pose design and
                 management problems. Decentralized systems will always
                 require more careful design, planning, and management
                 than their centralized counterparts. This paper begins
                 with the rationale for and against decentralization.
                 Then, a technical approach to decentralized systems is
                 sketched. This approach contrasts with the popular
                 concept of a distributed integrated database which
                 transparently provides remote IO against single system
                 image. Rather, it proposes that function be distributed
                 as ``servers'' which abstract data as high-level
                 operations on objects and communicate with
                 ``requestors'' via a standard message protocol. The
                 requestor-server approach has the advantages of
                 modularity and performance.",
  bibdate =      "Wed Feb 11 12:50:45 1987",
  owner =        "manning",
}

@Article{GREENBLATT76,
  key =          "Greenblatt \& Holt",
  author =       "I. E. Greenblatt and R. C. Holt",
  title =        "The {SUE}/11 operating system",
  journal =      "INFOR, Canadian Journal of Operational Research and
                 Information Processing",
  volume =       "14",
  number =       "3",
  month =        oct,
  year =         "1976",
  pages =        "227--232",
  bibdate =      "Fri Jul 8 16:35:54 1983",
}

@Unpublished{GUMPERTZ78,
  key =          "Gumpertz",
  author =       "R. Gumpertz",
  title =        "Hydra Kernel Tracer",
  year =         "1978",
}

@Article{GURSKI73,
  key =          "Gurski",
  author =       "A. Gurski",
  title =        "Job Control Languages as Machine Oriented Languages",
  journal =      "SIGPLAN Notices",
  year =         "1973",
  pages =        "18--23",
  annote =       "Suggests that there is little difference (except in
                 the useful functions or verbs) between a CL and an
                 ordinary POL (problem oriented language).",
  bibdate =      "Fri Jul 27 12:50:04 1984",
}

@Article{GYLYS76,
  title =        "Optimal Partitioning of Workload for Distributed
                 Systems",
  author =       "V. B. Gylys and J. A. Edwards",
  journal =      "Digest of Papers, COMPCON Fall 76",
  key =          "Gylys \& Edwards",
  month =        sep,
  year =         "1976",
  pages =        "353--357",
}

@Article{HABERMANN72,
  key =          "Habermann",
  author =       "A. N. Habermann",
  title =        "Synchronization of Communicating Processes",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "15",
  number =       "3",
  year =         "1972",
  pages =        "171--176",
  bibdate =      "Fri Jul 27 12:52:48 1984",
}

@TechReport{HABERMANN75,
  key =          "Habermann",
  author =       "A. N. Habermann",
  title =        "Path Expressions",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1975",
  month =        jun,
  bibdate =      "Wed Dec 29 23:29:58 1982",
}

@Article{HABERMANN76,
  key =          "Habermann et al.",
  title =        "Modularization and hierarchy in a family of operating
                 systems",
  author =       "A. N. Habermann and Flon L. and L. Cooprider",
  journal =      "Communications of the Association of Computing
                 Machinery",
  year =         "1976",
  month =        may,
  pages =        "266--72",
  volume =       "19",
}

@Article{HABERMANN78,
  key =          "Habermann",
  title =        "An Overview of the Gandalf Project",
  author =       "A. N. Habermann",
  journal =      "cmucsd, Research Review",
  year =         "1978-79",
}

@TechReport{HABERMANN80,
  key =          "Habermann \& Perry",
  author =       "A. N. Habermann and D. E. Perry",
  title =        "Well-Formed System Compositions",
  institution =  "Technical Report, cmucsd",
  month =        mar,
  year =         "1980",
}

@TechReport{HABERMANN81,
  key =          "Habermann et al.",
  author =       "N. Habermann and D. Perry and P. Feiler and R.
                 Medina-Mora and D. Notkin and G. Kaiser and B. Denny",
  title =        "A Compendium of Gandalf Documentation",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        apr,
  year =         "1981",
}

@InProceedings{HAGMANN82,
  key =          "Hagmann \& Fabry",
  author =       "R. B Hagmann and R. S. Fabry",
  title =        "Program Page Reference Patterns",
  booktitle =    "Performance Evaluation Review",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Seattle, WA",
  month =        aug # "-" # sep,
  year =         "1982",
  pages =        "20--24",
  abstract =     "This paper describes a set of measurements of the
                 memory reference patterns of some programs. The
                 technique used to obtain these measurements is
                 unusually efficient. The data is presented in graphical
                 form to allow the reder to ``see'' how the program uses
                 memory. Constant use of a page and sequential access of
                 memory are easily observed. An attempt is made to
                 classify the programs based on their referencing
                 behavior. From this analysis it is hoped that the
                 reader will gain some insights as to the effectiveness
                 of various memory management policies.",
  bibdate =      "Thu Feb 28 15:25:46 1985",
}

@Article{HANSEN72,
  key =          "Hansen",
  author =       "P. B. Hansen",
  title =        "Structured Multiprogramming",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "15",
  number =       "7",
  year =         "1972",
  pages =        "574--578",
  annote =       "This paper presents a proposal for structured
                 representation of multiprogramming in a high level
                 language. Shared variables are introduced, and their
                 role in 'critical regions (denoted by the structured
                 statement region var do Statement') is discussed. A
                 sychronization primitive 'await Boolean' delays a
                 process until the components of a shared variable
                 satisfy the boolean expression. For explicit control of
                 the scheduling of resources, an event queue is
                 associated with a shared variable, and two procedures
                 await (event) (leave a critical region associated with
                 the shared variable and join the event queue) and
                 cause(event) (enable all processes in the event queue
                 to reenter their critical regions) are provided, which
                 can control process scheduling to any degree desired.",
  bibdate =      "Tue Jul 24 14:46:41 1984",
}

@Article{HANSEN73,
  key =          "Hansen",
  author =       "P. B. Hansen",
  title =        "Concurrent Programming Concepts",
  journal =      "Comp Surv.",
  volume =       "5",
  number =       "4",
  year =         "1973",
  pages =        "223--245",
  bibdate =      "Fri Jul 27 13:33:12 1984",
}

@Article{HANSEN78,
  key =          "Hansen",
  author =       "P. B. Hansen",
  title =        "Distributed Processes: {A} Concurrent Programming
                 Concept",
  journal =      "Communications of the Association of Computing
                 Machinery",
  month =        nov,
  year =         "1978",
  pages =        "934--941",
  bibdate =      "Thu Jan 12 16:17:10 1984",
}

@TechReport{HARTER84,
  key =          "Harter, et al.",
  author =       "Jr. Harter P. K. and D. Heimbigner and R. King",
  title =        "Idd: An interactive Distributed Debugeger",
  number =       "CU-CS-274-84",
  institution =  "University of Colorado, Department of Computer
                 Science",
  year =         "1984",
  bibdate =      "Mon Dec 17 14:26:01 1984",
}

@Article{HATFIELD71,
  key =          "name",
  author =       "D. J. Hatfield and J. Gerald",
  title =        "Program restructuring for virtual memory",
  journal =      "IBM Systems Journal",
  volume =       "10",
  number =       "3",
  month =        mar,
  year =         "1971",
  pages =        "168--193",
  keywords =     "virtual memory, paging, sector placement problem,
                 automatic placement, monitoring, nearness matrix",
  abstract =     "The automatic sector reordering technique discussed
                 brings noticable improvements in paging performance
                 where there is room for improvement, reducing the
                 necessary working space (for a given number of
                 exceptions) by as much as one-third to one-half. The
                 page size for clustering bears a direct relationship to
                 the program sectors themselves. It has not proved
                 effective to cluster at the physical page site when the
                 average sector size is half as large or more. Finally,
                 the display of a virtual memory use pattern was shown
                 to be a good diagnostic tool.",
  bibdate =      "Tue Jan 10 09:35:46 1984",
}

@TechReport{HERLIHY84,
  key =          "Herlihy",
  author =       "M. Herlihy",
  title =        "General Quorum Consensus: {A} Replication Method for
                 Abstract Data Types",
  number =       "CMU-CS-84-164",
  institution =  "Carnegie-Mellon University",
  year =         "1985",
  month =        dec,
  abstract =     "Replication can enhance the availability of data in
                 distributed systems. This paper introduces General
                 Quorum Consensus: a new method for managing replicated
                 data. Unlike many methods that support replication only
                 for uninterpreted files, this method systematically
                 exploits type-specific properties of objects such as
                 sets, queues, or directories to provide more effective
                 replication. Associated with each operation of the data
                 type is a set of quorums, which are collections of
                 sites whose cooperation suffices to execute the
                 operation. Necessary and sufficient constraints on
                 quorum intersections are derived from an analysis of
                 the data type's algebraic structure. A reconfiguration
                 method is proposed that permits quorums to be changed
                 dynamically. By taking advantage of type-specific
                 properties in a general and systematic way, General
                 quorum consensus can realize a wider range of
                 availability properties and more flexible
                 reconfiguration than existing replication methods.",
  bibdate =      "Mon Oct 14 14:48:38 1985",
}

@TechReport{HERLIHY85,
  key =          "Herlihy",
  author =       "M. Herlihy",
  title =        "Using Type Information to Enhance the Availability of
                 Partitioned Data",
  number =       "CMU-CS-85-119",
  institution =  "Carnegie-Mellon University",
  year =         "1985",
  month =        apr,
  bibdate =      "Thu Oct 17 09:35:07 1985",
}

@InProceedings{HIBBARD78,
  key =          "Hibbard et al.",
  author =       "P. Hibbard and A. Hisgen and T. Rodeheffer",
  organization = "IEEE",
  booktitle =    "Proceedings of the 5th Annual Symposium on Computer
                 Architecture, Palo Alto, CA.",
  title =        "A Language Design for a Multiprocessor Computing
                 System",
  year =         "1978",
  month =        apr,
  pages =        "66--72",
}

@Article{HOARE74,
  key =          "Hoare",
  author =       "C. A. R. Hoare",
  title =        "Monitors: An Operating System Structuring Concept",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "17",
  number =       "10",
  pages =        "549--557",
  year =         "1974",
  month =        oct,
}

@Article{HOARE78,
  title =        "Communicating Sequential Processes",
  journal =      "Communications of the Association of Computing
                 Machinery",
  month =        aug,
  year =         "1978",
  volume =       "21",
  number =       "8",
  pages =        "666--667",
  key =          "Hoare",
  author =       "C. A. R. Hoare",
}

@TechReport{HOFRI78,
  key =          "Hofri \& Jenny",
  author =       "M. Hofri and C. J. Jenny",
  title =        "On the Allocation of Processes in Distributed
                 Computing Systems",
  institution =  "IBM Zurich Research Laboratory",
  month =        oct,
  year =         "1978",
}

@Article{HOLT72,
  key =          "Holt",
  author =       "R. C. Holt",
  title =        "Some Deadlock Properties of Computer Systems",
  journal =      "compsurv",
  month =        sep,
  year =         "1972",
  pages =        "179--196",
  bibdate =      "Fri Jan 6 13:36:26 1984",
}

@Article{HOLT75,
  key =          "Holt",
  author =       "R. C. Holt",
  title =        "Structure of Computer Programs: {A} Survey",
  journal =      "procieee",
  volume =       "63",
  number =       "6",
  year =         "1975",
  pages =        "879--893",
  abstract =     "A survey of reasons for and methods of dividing large
                 computer programs as arising from 1) physical
                 constraints such as limited memory space, and 2) human
                 constraints such as division of programming
                 responsibility. The central portion of the paper deals
                 with mechanisms for program decomposition. The paper
                 also discusses techniques for folding programs to meet
                 memory constraints (by overlaying, paging and
                 segmenting) and methods of linking separately compiled
                 procedures.",
  bibdate =      "Fri Jul 27 13:54:32 1984",
}

@InProceedings{HOLT81,
  key =          "Holt et al.",
  author =       "R. C. Holt and D. B. Wortman and J. R. Cordy and D. R.
                 Crowe and I. H. Griggs",
  title =        "Euclid: {A} language for producing quality software",
  booktitle =    "Proceedings of the National Computer Conference",
  address =      "Chicago, IL",
  month =        may,
  year =         "1981",
  bibdate =      "Fri Jul 8 16:37:31 1983",
}

@Article{HORNING73,
  key =          "Horning \& Randell",
  author =       "J. Horning and B. Randell",
  title =        "Process Structuring",
  journal =      "compsurv",
  volume =       "5",
  number =       "1",
  year =         "1973",
  pages =        "5--30",
  bibdate =      "Fri Jul 27 14:31:31 1984",
}

@Article{HORNING76,
  key =          "Horning \& Randell",
  author =       "J. J. Horning and B. Randell",
  title =        "Process Structuring",
  journal =      "compsur",
  volume =       "5",
  number =       "1",
  month =        mar,
  year =         "1976",
  pages =        "5--30",
  bibdate =      "Fri Jan 6 13:20:11 1984",
}

@article{Heidemann94-Stackable,
    author = "John S. Heidemann and Gerald J. Popek",
    title =   "{File-system Development with Stackable Layers}",
    journal = "ACM Transactions on Computer Systems (TOCS)",
    volume = "12",
    number = "1",
    pages = "58--89",
    year = "1994",
}

@article{Spasojevic-tocs96,
    author = {Mirjana Spasojevic and M. Satyanarayanan},
    title = {An empirical study of a wide-area distributed file system},
    journal = "ACM Transactions on Computer Systems (TOCS)",
    volume = {14},
    number = {2},
    year = {1996},
    issn = {0734-2071},
    pages = {200--222},
}

@TechReport{HOWARD87,
  key =          "Howard et al.",
  author =       "J. H. Howard and M. L. Kazar and S. G. Menees and D.
                 A. Nichols and M. Satyanarayanan and R. N. Sidebotham
                 and M. J. West",
  title =        "Scale and Performance in a Distributed File System",
  institution =  "Information Technology Center",
  address =      "Carnegie-Mellon University, Pittsburgh, PA",
  year =         "1987",
  month =        aug,
  pages =        "1--32",
  abstract =     "The Andrew File System is a location-transparent
                 distributed file system that will eventually span more
                 than 5000 workstations at Carnegie-Mellon University.
                 Large scale affects performance and complicates system
                 operation. In this paper we present observations of a
                 prototype implementation, motivate changes in the areas
                 of cache validation, server process structure, name
                 translation and low-level storage representation, and
                 quantitatively demonstrate Andrew's ability to scale
                 gracefully. We establish the importance of whole-file
                 transfer and caching in Andrew by comparing its
                 performance with that of Sun Microsystem's NSF file
                 system. We also show how the aggregation of files into
                 volumes improves the operability of the system.",
  bibdate =      "Mon Feb 15 11:23:29 1988",
  owner =        "manning",
}

@InProceedings{HUTCHINSON87,
  key =          "Hutchinson",
  author =       "N. C. Hutchinson",
  title =        "Emerald: {A} Language to Support Distributed
                 Programming",
  booktitle =    "Proceedings from the Second Workshop on Large-Grained
                 Parallelism",
  organization = "Software Engineering Institute",
  address =      "Carnegie-Mellon University, Pittsburgh, PA",
  editor =       "J. Wing and M. Herlihy and M. R. Barbacci",
  volume =       "CMU/SEI-87-SR-5",
  month =        nov,
  year =         "1987",
  pages =        "45--47",
  bibdate =      "Mon Feb 15 11:49:43 1988",
  owner =        "manning",
}

@InProceedings{HUTCHINSON89,
  key =          "Hutchinson et al.",
  author =       "N. C. Hutchinson and L. L. Peterson and M. B. Abbott
                 and S. O'Malley",
  title =        "{RPC} in the x-Kernel: Evaluating New Design
                 Techniques",
  booktitle =    "Proceedings of the 12th ACM SOSP",
  address =      "Litchfield Park, AZ",
  volume =       "23",
  month =        dec,
  year =         "1989",
  pages =        "91--101",
  abstract =     "This paper reports our experiences implementing remote
                 procedure call (RPC) protocols in the x-kernel. This
                 exercise is interesting because the RPC protocols
                 exploit two novel design techniques: virtual protocols
                 and layered protocols. These techniques are made
                 possible because the x-kernel provides an
                 object-oriented infrastructure that supports three
                 significant features: a uniform interface to all
                 protocols, a late binding between protocol layers, and
                 a small overhead for invoking any given protocol layer.
                 For each design technique, the paper motivates the
                 technique with a concrete example, describes how it is
                 applied to the implementation of RPC protocols, and
                 presents the results of experiments designed to
                 evaluate the technique.",
  bibdate =      "Thu Jan 11 11:16:33 1990",
  owner =        "robyn",
}

@Article{HWANG82,
  key =          "Hwang et al",
  author =       "K Hwang and W. J. Croft and G. H. Gable and B. W. Wah
                 and F. A. Briggs and W. R. Simmons and C. L. Coates",
  title =        "A Unix-Based Local Computer Network with Load
                 Balancing",
  journal =      "Computer",
  volume =       "15",
  number =       "4",
  month =        apr,
  year =         "1982",
  pages =        "55--66",
  keywords =     "local area networkds, Unix, load balancing, remote
                 execution, ECN",
  abstract =     "Describes ECN, a network of Vasen and smaller DEC
                 computers connected to a 1 M-baud network. Unix was
                 extended with programs to establish a virtual terminal
                 access, remote process execution, and load balancing
                 capabilities in a time-sharing mode.",
  bibdate =      "Tue Jan 10 15:38:59 1984",
}

@PhdThesis{JANSON76,
  key =          "Janson",
  author =       "P. A. Janson",
  title =        "Using Type Extension to Organize Virtual Memory
                 Mechanisms",
  school =       "Massachusetts Institute of Technology",
  year =         "1976",
  month =        sep,
  number =       "MIT LCS TR-167",
}

@Article{JENNY77,
  title =        "Process Partitioning in Distributed Systems",
  author =       "C. J. Jenny",
  key =          "Jenny",
  journal =      "Digest of Papers NTC '77",
  year =         "1977",
}

@Unpublished{JENSEN81,
  key =          "Jensen",
  author =       "E. D. Jensen",
  title =        "The Archons Project",
  year =         "1981",
  note =         "Notes of a talk at Carnege-Mellon University",
}

@Article{JOHNSON87,
  key =          "Johnson",
  author =       "H. J. Johnson",
  title =        "Each Piece in its Place",
  journal =      "Unix Review",
  publisher =    "AT\&T",
  volume =       "5",
  number =       "6",
  month =        jun,
  year =         "1987",
  pages =        "66--75",
  bibdate =      "Thu Jun 11 13:32:25 1987",
  owner =        "manning",
}

@PhdThesis{JONES73,
  key =          "Jones",
  author =       "A. K. Jones",
  title =        "Protection in Programmed Systems",
  school =       "Carnegie-Mellon University",
  year =         "1973",
  month =        jun,
}

@InBook{JONES77,
  key =          "Jones",
  author =       "A. K. Jones",
  title =        "Protection Mechanisms and the Enforcement of Security
                 Policies",
  booktitle =    "Advanced Course on Operating Systems",
  publisher =    "No Entry",
  year =         "1977",
  pages =        "229--237",
  bibdate =      "Fri Jul 27 14:52:15 1984",
}

@InProceedings{JONES77A,
  key =          "Jones",
  author =       "A. K. Jones",
  title =        "The Narrowing Gap Between Language Systems and
                 Operating Systems",
  booktitle =    "Proceedings of the IFIP Conference",
  year =         "1977",
  bibdate =      "Wed Dec 29 20:03:46 1982",
}

@InProceedings{JONES77B,
  key =          "Jones et al.",
  author =       "A. Jones and Jr. Chansler R. J. and I. Durham and P.
                 Feiler and K. Schwans",
  title =        "Software management of Cm*--a distributed
                 multiprocessor",
  organization = "AFIPS",
  booktitle =    "Proceedings of the AFIPS National Computer
                 Conference",
  pages =        "657--663",
  year =         "1977",
}

@InBook{JONES77C,
  key =          "Jones",
  author =       "A. Jones",
  title =        "Object-Based Protection",
  booktitle =    "Advanced Course on Operating Systems",
  publisher =    "Springer-Verlag Pub. Co.",
  year =         "1977",
  bibdate =      "Fri Jan 6 13:43:43 1984",
}

@Article{JONES78,
  key =          "Jones et al.",
  author =       "A. K. Jones and Jr. Chansler R. J. and I. Durham and
                 P. Feiler and D. Scelza and K. Schwans and S. R.
                 Vegdahl",
  title =        "Programming issues raised by a multiprocessor",
  journal =      "procieee",
  volume =       "66",
  number =       "2",
  year =         "1978",
  month =        feb,
  pages =        "229--37",
  abstract =     "In this article the issues of building software for a
                 multiprocessor is discussed, and in the light of these
                 issues Cm*, its operating system (StarOS), and a
                 specific application are considered. The features of
                 StarOS which are examined are virtual memory, the
                 handling of capabilities, resource scheduling and
                 allocation modules, and communication and
                 synchronization using usingmailboxes and read/write
                 segments. The implementation of HARPY on Cm* is
                 outlined, and various performance issues are
                 considered",
  bibdate =      "Fri Jul 27 14:48:02 1984",
}

@InProceedings{JONES79A,
  title =        "{TASK} forces: Distributed Software for solving
                 problems of substantial size",
  author =       "A. K. Jones and K. Schwans",
  booktitle =    "Proceedings of the 4th Internatonal Conference on
                 Software Engineering",
  pages =        "315--330",
  month =        sep,
  year =         "1979",
  key =          "Jones \& Schwans",
}

@Unpublished{JONES79B,
  key =          "Jones \& Fieler",
  title =        "Software configuration experiments",
  year =         "1979",
  author =       "A. K. Jones and P. Feiler",
  note =         "To appear",
}

@InProceedings{JONES79C,
  title =        "Star{OS}, a Multiprocess Operating System for the
                 support of Task Forces",
  author =       "A. K. Jones and Jr. Chansler R. J. and I. Durham and
                 K. Schwans and S. R. Vegdahl",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  key =          "Jones et al.",
  month =        sep,
  year =         "1979",
  pages =        "117--127",
}

@InProceedings{JONES79D,
  key =          "Jones et al.",
  author =       "A. K. Jones and Jr. Chansler R. J. and I. Durham and
                 J. Mohan and K. Schwans and S. Vegdahl",
  title =        "Star{OS}, a Multiprocessor Operating System",
  organization = "ACM/SIGOPS",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  address =      "Asimolar Conference Grounds, Pacific Grove, CA",
  year =         "1979",
  month =        dec,
  pages =        "117--127",
}

@Article{JONES80A,
  key =          "Jones \& Schwarz",
  title =        "Experience Using Multiprocessor Systems: {A} Status
                 Report",
  author =       "A. K. Jones and P. Schwarz",
  journal =      "compsurv",
  volume =       "12",
  number =       "2",
  month =        jun,
  year =         "1980",
  pages =        "121--166",
}

@TechReport{JONES80B,
  key =          "Jones \& Gehringer",
  author =       "A. K. Jones and E. F. [eds.] Gehringer",
  title =        "The Cm* multiprocessor project: {A} research review",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  number =       "CMU-CS-80-131",
  year =         "1980",
  month =        jul,
}

@Unpublished{JONES80C,
  key =          "Jones \& Schwans",
  title =        "The Task language specification",
  author =       "A. K. Jones and K. Schwans",
  year =         "1980",
  note =         "Unpublshed CMU Computer Science Department techncal
                 report",
}

@Unpublished{JONES81,
  key =          "Jones \& Schwans",
  author =       "A. K. Jones and K. Schwans",
  title =        "Specifying software configurations for distributed
                 computation",
  note =         "To be publshed",
  year =         "1981",
}

@TechReport{JONES84,
  key =          "Jones et al.",
  author =       "M. B. Jones and R. F. Rashid and M. R. Thompson",
  title =        "Matchmaker: An interface Specification Language for
                 Distributed Processing",
  number =       "CMU-CS-84-161",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1984",
  month =        dec,
  keywords =     "remote procedure call; interprocess communication;
                 object-oriented languages; multi-targeted compiler;
                 interface specification language; distributed systems",
  abstract =     "Matchmaker, a language used to specify and automate
                 the generation of interprocess communication
                 interfaces, is presented. The process of and reasons
                 for the evolution of Matchmaker are described.
                 Performance and usage statistics are presented.
                 Comparisons are made between Matchmaker and other
                 related systems. Possible future directions are
                 examined.",
  bibdate =      "Mon Mar 4 11:33:07 1985",
}

@InProceedings{JONES86,
  key =          "Jones \& Rashid",
  author =       "M. B. Jones and R. F. Rashid",
  title =        "Mach and Matchmaker: Kernel and Language Support for
                 Object-Oriented Distributed Systems",
  booktitle =    "Proceedings of the Conference on Object-Oriented
                 Programming Systems, Languages and Applications",
  organization = "ACM",
  publisher =    "IEEE",
  address =      "Portland, OR",
  editor =       "N. Meyrowitz",
  volume =       "21",
  month =        nov,
  year =         "1986",
  pages =        "67--77",
  keywords =     "Object-oriented systems; object-oriented languages;
                 object capabilities; multi-processor operating system;
                 interprocess communication; remote procedure call;
                 multi-targeted compiler; interface specification
                 language; distributed systems",
  abstract =     "Mach, a multiprocessor operating system kernel
                 providing capability-based interprocess communication,
                 and Matchmaker, a language for specifying and
                 automating the generation of multi-lingual interprocess
                 communication interfaces, are presented. Their usage
                 together providing a heterogeneous, distributed,
                 object-oriented programming environment is described.
                 Performance and usage statistics are presented.
                 Comparisons are made between the Mach/Matchmaker
                 environment and other related systems. Possible future
                 directions are examined.",
  bibdate =      "Fri Nov 7 16:27:38 1986",
  owner =        "manning",
}

@TechReport{JOSEPH81,
  key =          "Joseph",
  author =       "M. Joseph",
  title =        "Communication Schemes",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jun,
  year =         "1981",
}

@InProceedings{KAEHLER86,
  key =          "Kaehler",
  author =       "T. Kaehler",
  title =        "Virtual Memory on a Narrow Machine for an
                 Object-Oriented Language",
  booktitle =    "Proceedings of the Conference on Object-Oriented
                 Programming Systems, Languages and Applications",
  organization = "ACM",
  address =      "Portland, OR",
  editor =       "N. Meyrowitz",
  volume =       "21",
  month =        nov,
  year =         "1986",
  pages =        "87--106",
  bibdate =      "Mon Nov 10 11:55:59 1986",
  owner =        "manning",
}

@Article{KAFURA77,
  key =          "Kafura \& Shen",
  author =       "D. G. Kafura and V. Y. Shen",
  title =        "Task Scheduling on a Multiprocessor System with
                 Independent Memories",
  journal =      "SIAM J. Computing",
  volume =       "6",
  number =       "1",
  month =        mar,
  year =         "1977",
  pages =        "167--187",
}

@InProceedings{KAHN81B,
  key =          "Kahn et al.",
  author =       "K. C. Kahn and W. M. Corwin and T. D. Dennis and F.
                 J.; D'Hooge {H.; Hubka, D. E.; Hutchins, L. A.;
                 Montague, J. T.; Pollack} and M. R. Gifkins",
  title =        "i{MAX}: {A} Multiprocessor Operating System for an
                 Object-Oriented Computer",
  booktitle =    "Proceedings of the Eighth Symposium on Operating
                 Systems Principles",
  organization = "ACM/SIGOPS",
  month =        dec,
  year =         "1981",
  pages =        "127--136",
  bibdate =      "Wed Dec 29 23:16:57 1982",
}

@Article{KERNIGHAN84,
  key =          "Kernighan",
  author =       "B. W. Kernighan",
  title =        "The Unix System and Software Reusability",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-10",
  number =       "5",
  month =        sep,
  year =         "1984",
  pages =        "513--518",
  keywords =     "Filter; generator; library; I/O redirection; pipe;
                 Unix",
  bibdate =      "Mon Feb 11 14:34:51 1985",
}

@InProceedings{KLEINROCK70,
  key =          "Kleinrock",
  author =       "L. Kleinrock",
  title =        "A Continuum of Time-Sharing Scheduling",
  booktitle =    "Proceedings of the AFIPS Spring Joint Computer
                 Conference",
  year =         "1970",
  pages =        "453--458",
  bibdate =      "Fri Jan 6 13:39:43 1984",
}

@Article{KOHLER81,
  key =          "Kohler",
  author =       "W. H. Kohler",
  title =        "A Survey of Techniques for Synchronization and
                 Recovery in Decentralized Computer Systems",
  journal =      "compsurv",
  publisher =    "Association for Computing Machinery",
  volume =       "13",
  number =       "2",
  month =        jun,
  year =         "1981",
  pages =        "149--183",
  keywords =     "Decentralized system; object model; access
                 synchronization; concurrency control; crash recovery;
                 atomic action",
  abstract =     "Two related and fundamental problems in designing
                 decentralized systems which support an object model of
                 computation are introduced, and proposed solution
                 techniques are surveyed. The first problem is
                 synchronizing access to shared objects while allowing a
                 high degree of concurrency. The second is the recovery
                 of objects in spite of user errors, application errors,
                 or partial system failure. The synchronization problem
                 is a generalization of the concurrency control problem
                 which arises in database and transaction- processing
                 systems. Concurrency control methods which use locking,
                 timestamps, circulating permit, tickets, conflict
                 analysis, and reservations are presented and compared.
                 The proposed approach to solving the recovery problem
                 is based on a software structuring abstraction called
                 the atomic action, a type of generalized transaction.
                 Requirements and techniques for implementing atomic
                 actions in a decentralized environment are discussed.",
  bibdate =      "Thu Jan 15 13:32:26 1987",
  owner =        "manning",
}

@TechReport{KORTH84B,
  key =          "Korth \& Silberschatz",
  author =       "H. F. Korth and A. Silberschatz",
  title =        "Rosi: {A} User-Friendly Operating System Interface
                 Based On The Relational Data Model",
  number =       "84-12",
  institution =  "University of Texas at Austin",
  year =         "1984",
  month =        apr,
  bibdate =      "Thu Feb 7 10:03:31 1985",
}

@InProceedings{KUNG77A,
  key =          "Kung \& Song",
  author =       "H. T. Kung and S. W. Song",
  title =        "An efficient parallel garbage collection system and
                 its correctness proof",
  booktitle =    "Proceedings of the 18th Annual Symposium on Foundatons
                 of Computer Science",
  organization = "IEEE Computer Society",
  month =        oct,
  year =         "1977",
  pages =        "120--31",
  note =         "Also avalable as a Carnegie-Mellon University Computer
                 Scence Department Technical Report, September 1977",
}

@Unpublished{KUNG77B,
  key =          "Kung \& Stevenson",
  author =       "H. T. Kung and D. Stevenson",
  title =        "A Software Technique for Reducing the Routing Time on
                 a Parallel Computer with a fixed Interconnection
                 Network",
  note =         "Unpublished working paper",
  year =         "1977",
}

@TechReport{LAMB80,
  key =          "lamb",
  author =       "D. A. Lamb",
  title =        "Construction of a Peephole Optimiser",
  number =       "CMU-CS-80-141",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1980",
  month =        aug,
  abstract =     "The design and construction of a peephole optimiser is
                 described. The optimiser consists of a database of
                 patterns, a translator which translates the patterns
                 into an implementation language, and a pattern-matcher
                 skeleton into which the generated pattern code is
                 inserted. We argue that this three-part split is a good
                 way to approach the construction of certain kinds of
                 programs.",
  owner =        "Rick Snodgrass",
  bibdate =      "Sun Aug 7 18:33:01 1983",
}

@PhdThesis{LAMB83,
  key =          "Lamb",
  author =       "D. A. Lamb",
  title =        "Sharing Intermediate Representations: The Interface
                 Description Language",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        may,
  year =         "1983",
  bibdate =      "Fri Jul 1 14:54:34 1983",
}

@TechReport{LAMPORT86,
  key =          "Lamport",
  author =       "L. Lamport",
  title =        "A Simple Approach To Specifying Concurrent Systems",
  number =       "15",
  institution =  "Digital Systems Research Center",
  address =      "Palo Alto, CA",
  year =         "1986",
  month =        dec,
  pages =        "1--38",
  abstract =     "In the transition axiom method, safety properties of a
                 concurrent system can be specified by programs;
                 liveness properties are specified by assertations in a
                 simple temporal logic. The method is described with
                 some simple examples, and its logical foundation is
                 informally explored through a careful examination of
                 what it means to implement a specification. Language
                 issues and other practical details are largely
                 ignored.",
  bibdate =      "Thu Feb 19 11:29:20 1987",
  owner =        "manning",
}

@TechReport{LAMPORT88,
  key =          "Lamport",
  author =       "L. Lamport",
  title =        "Concurrent Reading and Writing of Clocks",
  number =       "27",
  institution =  "Digital Systems Research Center",
  address =      "Palo Alto, CA",
  year =         "1988",
  month =        apr,
  pages =        "1--7",
  abstract =     "As an exercise in synchronization without mutual
                 exclusion, algorithms are developed to implement both a
                 monotonic and a cyclic multiple-word clock that is
                 updated by one process and read by one or more other
                 processes.",
  owner =        "manning",
  bibdate =      "Thu Jun 9 10:03:13 1988",
}

@Article{Lampson69A,
  key =          "Lampson",
  author =       "B. W. Lampson",
  title =        "Dynamic Protection Structures",
  journal =      "Proceedings of the AFIPS Fall Joint Computer
                 Conference",
  year =         "1969",
  pages =        "27--38",
  bibdate =      "Fri Jul 27 14:58:23 1984",
}

@InProceedings{Lampson71,
  key =          "Lampson",
  author =       "B. Lampson",
  title =        "Protection",
  pages =        "437--443",
  organization = "Princeton University",
  year =         "1971",
  booktitle =    "Proc. Fifth Annual Princeton Conference on Information
                 Sciences and Systems",
}

@Article{Lampson76,
  key =          "Lampson \& Sturgis",
  title =        "Reflections on an operating system design",
  author =       "B. Lampson and H. Sturgis",
  journal =      "Communications of the Association of Computing
                 Machinery",
  year =         "1976",
  pages =        "251@endash()65",
  volume =       "19",
}

@Article{LANE78,
  key =          "Lane",
  author =       "M. G. Lane",
  title =        "The Subsystem Approach to Enhancing Small Processor
                 Operating Systems",
  journal =      "Proc First SigMINI symposium on Small Systems",
  year =         "1978",
  pages =        "48--55",
  abstract =     "The implementation of subsystems to complement vendor
                 - supported operating systems is one method of
                 increasing the power of small systems. In implementing
                 such subsystems, the parent operating systems generally
                 are not aware of the presence of these subsystems, even
                 though in many cases the subsystem 'takes over' the
                 computer. Two major goals existed in the implementation
                 of all the subsystems which are discussed: 1) provided
                 additional power not provided by the parent operating
                 system; and, 2) do not modify the parent operating
                 system (except perhaps for temporary changes in memory)
                 so that vendor support is guaranteed.",
  bibdate =      "Fri Jul 27 15:04:42 1984",
}

@InProceedings{LANTZ79,
  key =          "Lantz \& Rashid",
  author =       "K. A. Lantz and R. F. Rashid",
  title =        "Virtual Terminal Management in a Multiple Process
                 Environment",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  publisher =    "ACM",
  address =      "Asilomar",
  year =         "1979",
  bibdate =      "Fri Jan 6 13:24:51 1984",
}

@InProceedings{LANTZ79A,
  key =          "Lantz",
  author =       "K. Lantz and R. F. Rashid",
  title =        "{VTMS}: {A} Virtual Terminal Management System for
                 {RIG}",
  booktitle =    "Proceedings of the Seventh Symposium on Operating
                 System Principles",
  pages =        "86--97",
  organization = "ACM",
  month =        dec,
  year =         "1979",
}

@Article{LANTZ82,
  key =          "Lantz et al",
  author =       "K. A. Lantz and K. D. Gradischnig and J. A. Feldman
                 and R. F. and Rashid",
  title =        "Rochester's Intelligent Gateway",
  journal =      "Computer",
  volume =       "11",
  month =        oct,
  year =         "1982",
  pages =        "54--68",
  bibdate =      "Fri Jan 6 14:03:48 1984",
}

@Article{LAUER75,
  key =          "Lauer \& Campbell",
  author =       "P. E. Lauer and R. H. Campbell",
  title =        "Formal Semantics of a Class of High-Level Primitives
                 for Coordinating Concurrent Processes",
  journal =      "Acta Informatica",
  volume =       "5",
  year =         "1975",
  pages =        "297--332",
  bibdate =      "Wed Dec 29 21:20:34 1982",
}

@InProceedings{LAUER78,
  key =          "Lauer \& Needham",
  title =        "On the duality of operating system structures",
  author =       "H. C. Lauer and R. M. Needham",
  year =         "1978",
  organization = "IRIA",
  booktitle =    "Proc. Second International Symposium on Operating
                 Systems",
  note =         "Reprinted in Operating Systems Review, 13,2 April
                 1979, pp.3-19.",
}

@InProceedings{LAUER81,
  key =          "Lauer",
  author =       "H. C. Lauer",
  title =        "Observations on the Development of an Operating
                 System",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Pacific Grove, CA",
  month =        dec,
  year =         "1984",
  pages =        "30--36",
  abstract =     "The development of Pilot, an operating system for a
                 personal computer is reviewed including a brief history
                 and some of the problems and lessons encountered during
                 this development. As part of understanding how Pilot
                 and other operating systems come about, and hypothesis
                 is presented that systems can be classified into five
                 kinds according to the style and direction of their
                 development, independent of their structure. A furhter
                 hypothesis is presented that systems such as Pilot, and
                 many others in widespread use, take about five to seven
                 years to reach maturity, independent of the quality and
                 quantity of the talent applied to their development.
                 The pressures, constraints, and problems of producing
                 Pilot are discussed in the context of these
                 hypotheses.",
  bibdate =      "Thu Oct 4 08:42:29 1984",
}

@Article{LAUESEN73,
  key =          "Lauesen",
  author =       "S. Lauesen",
  title =        "Program Control of Operating Systems",
  journal =      "BIT",
  volume =       "13",
  pages =        "323--337",
  year =         "1973",
  abstract =     "Traditional JCLs are eliminated if existing
                 programming languages are extended slightly. The
                 process described in this paper is to extend the
                 existing language by (1) make a set of new basic data
                 types and introduce them into all languages; (2))
                 define declarations for them; (3) introduce the
                 necessary basic operations working on them; (4)
                 introduce a suitable set of standard functions covering
                 the frequently used composite functions now expressed
                 by means of control cards. A set of operating system
                 functions which make this scheme easy to implement is
                 specified: (1) processes, communicating through shared
                 queues; (2) parent/child processes; (3) processes for
                 device I/O; and (4) an internal control language.",
}

@InProceedings{LAZOWSKA81,
  key =          "Lazowska, et al.Lazowska, et al.",
  author =       "E. D. Laxowska and H. M. Levy and G. T. Almes and S.
                 C. Fischer {M. J.; Fowler, R. J.; Vestal}",
  title =        "The Architecture of the Eden System",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Pacific Grove, CA",
  month =        dec,
  year =         "1981",
  pages =        "148--159",
  bibdate =      "Thu Oct 4 13:11:52 1984",
}

@TechReport{LAZOWSKA84,
  key =          "Lazowska et al.",
  author =       "E. D. Lazowska and J Zahorjan and D. R. Cheriton and
                 W. Zwaenepoel",
  title =        "File Access Performance of Diskless Workstations",
  number =       "84-06-01",
  institution =  "Stanford University'",
  year =         "1984",
  month =        jun,
  keywords =     "Distributed systems; computer system performance
                 analysis; diskless workstations; file servers; local
                 area network",
  bibdate =      "Wed Feb 20 13:32:48 1985",
}

@Article{LELANN81,
  key =          "LeLann",
  author =       "G. LeLann",
  title =        "A Distributed System for Real-Time Transaction
                 Processing",
  journal =      "IEEE Computer Magazine",
  volume =       "14",
  number =       "2",
  month =        feb,
  year =         "1981",
  pages =        "42--50",
}

@InProceedings{LESSER79,
  key =          "Lesser et al.",
  author =       "V. Lesser and D. Serain and J. and Bonar",
  title =        "{PCL} : {A} Process Oriented Job Control Language",
  booktitle =    "The 1rst Internatl. Conf. on Distributed Computing
                 Systems, Huntsville, Alabama",
  year =         "1979",
  month =        oct # " 1-5",
  pages =        "315--329",
}

@Article{LEVERETT80,
  key =          "Leverett et al.",
  author =       "B. Leverett and R. G. G. Cattell and S. O. Hobbs and
                 W. A. Newcomer {J. M.; Reiner, A. H.; Schatz, B. R.;
                 Wulf}",
  title =        "An Overview of the Production Quality
                 Compiler-Compiler Project",
  journal =      "Computer",
  month =        aug,
  year =         "1980",
  volume =       "13",
  number =       "8",
  pages =        "38--49",
}

@TechReport{LEVERETT82,
  key =          "Leverett",
  author =       "B. W. Leverett",
  title =        "Topics in Code Generation and Register Allocation",
  number =       "CMU-CS-82-130",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1982",
  month =        jul,
  abstract =     "This paper discusses some questions about register
                 allocation and code generation in optimizing compilers.
                 The context of the research is the PQCC (Production
                 Quality Compiler-Compiler) project. The questions
                 discussed include fundamental questions of compiler
                 structure, that is, questions of the feasibility and
                 correctness of the approach taken by the project. I
                 also report on less fundamental issues, issues more or
                 less orthogonal to the questions of structure. This
                 discussion should be of interest to any designer of
                 optimizing compilers who is interested in
                 \fIretargetability\fR, that is, in the adaptation of
                 such a compiler to modification to allow code
                 generation for different target machines.",
  bibdate =      "Thu Oct 13 23:02:57 1983",
}

@InProceedings{LEVIN75,
  author =       "R. Levin and E. Cohen and W. Corwin and Pollack F. and
                 W. Wulf",
  key =          "Levin et al.",
  title =        "Policy/mechanism separation in Hydra",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  address =      "Unversity of Texas at Austin",
  organization = "ACM/SIGOPS",
  month =        nov,
  year =         "1975",
  pages =        "132--140",
  abstract =     "The extent to which resource allocation policies are
                 entrusted to user level software determines in a large
                 part the degree of flexibility present in an operating
                 system. In Hydra the determination to separate
                 mechanism and policy is established as a basic design
                 principle and is implemented by the construction of a
                 kernal composed (almost entirely) of mechanisms. This
                 paper presents three such mechanisms (scheduling,
                 paging, and protection) and examines how external
                 policies which manipulate them may be constructed. It
                 is shown that the policy decisions which remain
                 embedded in the kernal exist for the sole purpose of
                 arbitrating conflicting requests for physical
                 resources, and then only to the extent of guaranteeing
                 fairness.",
  bibdate =      "Mon Jul 30 08:29:21 1984",
}

@TechReport{LEVIN76,
  key =          "Levin et al.",
  author =       "R. Levin and D. Jefferson and J. Newcomer",
  title =        "{C}.mmp Linker Reference Manual",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1976",
  month =        aug,
}

@PhdThesis{LEVIN77,
  key =          "Levin",
  author =       "R. Levin",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  title =        "Program structures for exceptional condition
                 handling",
  year =         "1977",
}

@Article{LEVY82,
  key =          "Levy \& Lipman",
  author =       "H. M. Levy and P. H. Lipman",
  title =        "Virtual Memory Management in the {VAX}/{VMS} Operating
                 System",
  journal =      "Computer",
  volume =       "15",
  number =       "3",
  month =        mar,
  year =         "1982",
  pages =        "35--41",
  bibdate =      "Fri Jan 6 13:38:13 1984",
}

@Article{LISKOV72,
  key =          "Liskov",
  author =       "B. H. Liskov",
  title =        "The Design of the Venus Operating System",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "15",
  number =       "3",
  year =         "1972",
  pages =        "144--149",
  bibdate =      "Mon Jul 30 08:31:21 1984",
}

@InProceedings{LISKOV79,
  key =          "Liskov",
  author =       "B. Liskov",
  title =        "Primitives for Distributed Computing",
  organization = "ACM/SIGOPS",
  booktitle =    "Proceedings of the Seventh Symposium on Operating
                 Systems Principles",
  year =         "1979",
  month =        dec,
  address =      "Asilomar Conference Grounds, Pacific Grove, CA",
  pages =        "33--42",
}

@Article{LISKOV81,
  key =          "Liskov",
  author =       "ed. B. Liskov",
  title =        "Report on the Workshop on Fundamental Issues in
                 Distributed Computing",
  journal =      "Op Sys Review",
  year =         "1981",
  month =        jul,
  volume =       "15",
  number =       "3",
  page =         "9-38",
}

@Article{LISKOV88,
  key =          "Liskov",
  author =       "B. Liskov",
  title =        "Distributed Programming in Argus",
  journal =      "Communications of the Association of Computing
                 Machinery",
  publisher =    "Association for Computing Machinery",
  volume =       "31",
  number =       "3",
  month =        mar,
  year =         "1988",
  pages =        "300--312",
  bibdate =      "Thu May 26 17:09:59 1988",
  owner =        "manning",
}

@Article{LU79,
  key =          "Lu",
  author =       "P. M. Lue",
  title =        "A System for Resource Sharing in a Distributed
                 Environment-{RIDE}",
  journal =      "prociee",
  volume =       "3rd COMPSAC",
  month =        "1979",
  year =         "1979",
  pages =        "427--433",
  keywords =     "local area networks, Unix, RIDE, Datakit",
  abstract =     "Uses Datakit packet switching and data transmission
                 modules to provide transparent processor boundaries to
                 user programs for remote access, including remote file
                 access, remote process invocation, and interprocessor
                 communication.",
  bibdate =      "Tue Jan 10 15:45:15 1984",
}

@InProceedings{LUDERER81,
  key =          "Luderer, et al.",
  author =       "G. W. R. Luderer and H. C. J. P. Haggerty and P. A.
                 Kirslis and W. T. Marshall",
  title =        "A Distributed Unix System Based on {A} Virtual Circuit
                 Switch",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Pacific Grove, CA",
  month =        dec,
  year =         "1981",
  pages =        "160--168",
  bibdate =      "Thu Oct 4 13:18:57 1984",
}

@TechReport{LYON85,
  key =          "Lyon et al.",
  author =       "B. Lyon and G. Sager and J. M. Chang and D. Goldberg
                 and S. Kleiman and T. Lyon and R. Sandberg and D. Walsh
                 and P. Weiss",
  title =        "Overview of the Sun Network File System",
  number =       "CMU-CS-84-137",
  institution =  "Sun Microsystems, Inc.",
  year =         "1985",
  month =        "January",
  abstract =     "Sun's Network File System (NFS) solves the problem of
                 communication and sharing in a heterogeneous network of
                 machines and operating systems by providing sharing of
                 file systems transparently across the network. The NFS
                 interface is open, and Sun encourages customers, users
                 and other vendors to take advantage of the open
                 interface to extend the richness of the product.",
  bibdate =      "Tue Mar 5 09:50:33 1985",
}

@Article{MADISON76,
  key =          "Madison \& Batson",
  author =       "A. Madison and A. P. Batson",
  title =        "Characteristics of Program Localities",
  journal =      "Communications of the Association of Computing
                 Machinery",
  month =        may,
  year =         "1976",
  pages =        "285--294",
  bibdate =      "Thu Jan 12 16:11:25 1984",
}

@TechReport{MAMRAK80,
  key =          "Mamrak",
  author =       "S. A. Mamrak and J. Ramanathan",
  title =        "A Programming/Operating System for a Distributed
                 Computer System",
  institution =  "Computer \& Information Science Research Center, The
                 Ohio State Univ., TR-80-2",
  month =        feb,
  year =         "1980",
}

@InProceedings{MAMRAK82B,
  key =          "Mamrak et al.",
  author =       "S. A. Mamrak and P. Maurath and J. Gomez and S.
                 Janardan and C. Nicholas",
  title =        "Guest Layering Distributed Processing Support on Local
                 Operating Systems",
  booktitle =    "Proceedings of the 3rd International Conference on
                 Distributed Computing Systems",
  organization = "IEEE",
  publisher =    "IEEE",
  address =      "Miami, FL",
  month =        oct,
  year =         "1982",
  pages =        "854--859",
  abstract =     "This paper describes the concept of guest layering
                 distributed processing support on top of local
                 operating systems. It is demonstrated that in some
                 distributed environments guest layering is the only
                 viable design option. The design of one such
                 distributed support system, Desperanto, is outlined. A
                 general discussion is then presented of how guest
                 layering can be accomplished, based on what level of
                 networking support is offered by a local operating
                 system.",
  bibdate =      "Tue Mar 5 15:30:52 1985",
}

@Article{MAMRAK83,
  key =          "Mamrak et al",
  author =       "S. A. Mamrak and D. Leinbaugh and T. S. and Berk",
  title =        "A Progres Report on the Desperanto Project: Software
                 Support for Distributed Processing",
  journal =      "Operating Systems Review",
  volume =       "17",
  number =       "1",
  month =        jan,
  year =         "1983",
  pages =        "17--29",
  keywords =     "desperanto, monitoring, guest layering, IPC, tool
                 installation, distributed system",
  abstract =     "The Desperanto project involves the implementation of
                 software support for general-purpose resource sharing
                 in heterogeneous networks. This is intended as an
                 informal status report. Research areas involve guest
                 layering on local operating systems, installing
                 existing local tools into the distributed environment,
                 and developing new applications for the distributed
                 environments.",
  bibdate =      "Tue Jan 10 15:35:05 1984",
}

@InProceedings{MANKOVICH85,
  key =          "Mankovich \& Kolstad",
  author =       "J. E. Mankovich and R. B. Kolstad",
  title =        "Porting the 4.2{BSD} {UNIX} Virtual Memory Subsystem",
  booktitle =    "Improceedings of the 1985 USENIX Winter Technical Conference",
  address =      "Dallas, TX",
  month =        jan,
  year =         "1985",
  pages =        "4--10",
}

@PhdThesis{MARATHE77,
  title =        "Performance Evaluation at the hardware architecture
                 level and the operating system kernel design level",
  year =         "1977",
  month =        dec,
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  key =          "Marathe",
  author =       "M. V. Marathe",
}

@TechReport{MAUERSBERG81,
  key =          "Mauersberg",
  author =       "H. Mauersberg",
  title =        "The Spice Debugger",
  year =         "1981",
  type =         "DSN/SPICE Group Working Paper",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
}

@PhdThesis{MCGEHEARTY80,
  title =        "Performance Evaluation of Multiprocessors under
                 Interactive Workloads",
  author =       "P. F. McGehearty",
  key =          "McGehearty",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1980",
}

@MastersThesis{MENDELL82,
  key =          "Mendell",
  author =       "M. P. Mendell",
  title =        "Toward portable operating systems",
  school =       "Computer Science Department, University of Toronto",
  year =         "1982",
  bibdate =      "Fri Jul 8 16:49:05 1983",
}

@InProceedings{MUTKA87,
  key =          "Mutka \& Livny",
  author =       "M. Mutka and M. Livny",
  title =        "Scheduling Remote Processing Capacity in a
                 Workstation-Processor Bank Network",
  booktitle =    "Proceedings of the 7th International Conference of
                 Distributed Computing Systems",
  address =      "Berlin, West Germany",
  month =        sep,
  year =         "1987",
  bibdate =      "Wed May 2 15:44:36 1990",
  owner =        "robyn",
}

@InProceedings{MUTKA87A,
  key =          "Mutka \& Livny",
  author =       "M. W. Mutka and M. Livny",
  title =        "Profiling Workstations' Available Capacity For Remote
                 Execution",
  booktitle =    "Proceedings from Performance '87",
  year =         "1987",
  pages =        "529--544",
  bibdate =      "Thu May 3 07:29:45 1990",
  owner =        "robyn",
}

@InProceedings{NEEDHAM74,
  author =       "R. M. Needham and R. D. M. Walker",
  key =          "Needham \& Walker",
  title =        "Protection and process management in the {CAP}
                 computer",
  organization = "Institute de Recherche d'Informatique et
                 d'Automatique, France",
  booktitle =    "Proc. IRIA Internat'l Workshop on Protection in
                 Operating Systems",
  address =      "Rocquencourt, France",
  year =         "1974",
  pages =        "155--160",
}

@Book{NEEDHAM82,
  key =          "Needham \& Herbert",
  author =       "R. M. Needham and A. J. Herbert",
  title =        "The Cambridge {CAP} Computer and Its Operating
                 System",
  publisher =    "Addison-Wesley",
  address =      "Reading, MA",
  year =         "1982",
  bibdate =      "Fri Jan 6 13:50:49 1984",
}

@Article{NEHMER87,
  key =          "Nehmer et al.",
  author =       "J. Nehmer and D. Haban and F. Mattern and D.
                 Wybranietz and H. D. Rombach",
  title =        "Key Concepts of the {INCAS} Multicomputer Project",
  journal =      "tose",
  publisher =    "IEEE",
  volume =       "SE-13",
  number =       "8",
  month =        aug,
  year =         "1987",
  pages =        "913--923",
  keywords =     "distributed operating systems; distributed programming
                 languages; distributed systems; distributed testing;
                 message passing; multicast communication,
                 multicomputer",
  abstract =     "This paper gives an overview of the INCAS, INCremental
                 Architecture for distributed Systems, multicomputer
                 project, which aims at the development of a
                 comprehensive methodology for the design and
                 implementation of locally distributed systems. A
                 structuring concept for distributed operating systems
                 has been developed and integrated into the system
                 implementation language LADY. The concurrent high-level
                 programming language CSSA, based on the actor model,
                 has been designed for implementation of distributed
                 applications. A substantial effort in the INCAS project
                 is directed towards the development of a distributed
                 test methodology. An experimental system has been
                 implemented on a network of ten MC68000 microcomputers.
                 Preliminary experience with the methodology has been
                 gained from a small number of prototype applications.",
  bibdate =      "Fri May 5 15:01:27 1989",
  owner =        "payne",
}

@PhdThesis{NELSON81,
  key =          "Nelson",
  author =       "B. J. Nelson",
  title =        "Remote Procedure Call",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        may,
  year =         "1981",
  note =         "also published as Xerox PARC Technical Report
                 CSL-81-9",
}

@TechReport{NEUMANN75,
  key =          "Neumann et al.",
  author =       "Peter G. Neumann and L. Robinson and K. N. Levitt and
                 R. S. Boyer and Saxena A. R.",
  title =        "A Provably Secure Operating System",
  number =       "Project 2581 final report",
  address =      "Menlo Park, California",
  institution =  "Stanford Research Institute",
  month =        jun,
  year =         "1975",
  abstract =     "This paper describes the Provably Secure Operating
                 System (PSOS). This system is a paper design of a
                 hierarchical (over 12 levels) capability-based
                 operating system, on which a formal proof of
                 correctness was attempted. This paper contains concise
                 sections on the basis of protection and the rationale
                 for capabilities. The paper is well written and
                 informative.",
}

@Article{NOTKIN88,
  key =          "Notkin et al.",
  author =       "D. Notkin and A. P. Black and E. D. Lazowska and H. M.
                 Levy and J. Sanislo and J. Zahorjan",
  title =        "Interconnecting Heterogeneous Computer Systems",
  journal =      "Communications of the Association of Computing
                 Machinery",
  publisher =    "Association for Computing Machinery",
  volume =       "31",
  number =       "3",
  month =        mar,
  year =         "1988",
  pages =        "258--273",
  bibdate =      "Thu May 26 17:06:25 1988",
  owner =        "manning",
}

@Article{OESTREICHER67,
  key =          "Oestreicher et al.",
  author =       "M. D. Oestreicher and M. J. Bailey and J. I. Strauss",
  title =        "George 3--{A} General Purpose Time-sharing and
                 Operating System",
  journal =      "CACM",
  volume =       "10",
  number =       "11",
  pages =        "685--693",
  month =        nov,
  year =         "1967",
  abstract =     "An operating system is described which will run on a
                 variety of configurations of the I.C.T. 1900, and can
                 handle a large number of users while at the same time
                 running several background jobs. The most interesting
                 aspect of this system is the command langauge, which
                 includes macros, conditional statements, and software
                 interrupts.",
}

@Book{ORGANICK83,
  key =          "Organick",
  author =       "E. I. Organick",
  title =        "A Programmer's View of the Intel 432 System",
  publisher =    "McGraw-Hill Book Company",
  address =      "New York",
  year =         "1983",
  bibdate =      "Tue Jan 17 23:08:30 1984",
}

@PhdThesis{OUSTERHOUT80A,
  title =        "Partitioning and Cooperation in a Distributed
                 Multiprocessor Operating System: Medusa",
  author =       "J. K. Ousterhout",
  key =          "Ousterhout",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        apr,
  year =         "1980",
}

@Article{OUSTERHOUT80B,
  author =       "J. K. Ousterhout and D. A. Scelza and P. S. Sindhu",
  key =          "Ousterhout et al.",
  title =        "Medusa: an experiment in distributed operating system
                 structure",
  journal =      "Communications of the Association of Computing
                 Machinery",
  month =        feb,
  year =         "1980",
  volume =       "23",
  number =       "2",
  pages =        "92--105",
}

@Article{OUSTERHOUT89,
  key =          "Ousterhout \& Douglis",
  author =       "J. Ousterhout and F. Douglis",
  title =        "Beating the {I}/{O} Bottleneck: {A} Case for
                 Log-Structured File Systems",
  journal =      "opsysrev",
  volume =       "23",
  number =       "1",
  month =        jan,
  year =         "1989",
  pages =        "11--28",
  abstract =     "CPU speeds are improving at a dramatic rate, while
                 disk speeds are not. This technology shift suggests
                 that many engineering and office applications may
                 become so I/O-limited that they cannot benefit from
                 further CPU improvements. This paper discusses several
                 techniques for improving I/O performance, including
                 caches, battery-backed-up caches, and cache logging. We
                 then examine in particular detail an approach called
                 log-structured file systems, where the file system's
                 only representation on disk is in the form of an
                 append-only log. Log-structured file systems
                 potentially provide order-of-magnitude improvements in
                 write performance. When log-structured file systems are
                 combined with arrays of small disks (which provide high
                 bandwidth) and large main-memory file caches (which
                 satisfy most read accesses), we believe it will be
                 possible to achieve 1000-fold improvements in I/O
                 performance over today's systems.",
  bibdate =      "Tue Nov 7 09:13:03 1989",
  owner =        "robyn",
}

@Article{PARSONS75,
  key =          "Parsons",
  author =       "I. T. Parsons",
  title =        "A High Level Job Control Language",
  journal =      "Software--Practice and Experience",
  volume =       "5",
  pages =        "69--82",
  year =         "1975",
  abstract =     "This paper presents a high-level command language
                 design incorporating block structure, type-free
                 variables, conditional statements, and list and string
                 manipulation. Procedures are used to invoke operating
                 system functions. The system inputs a job control
                 program and outputs JCL statements for the ICL System
                 4, the ICL 1906A running George 3, or the CDC 7600
                 machine running Scope 2.0.",
}

@InProceedings{POLLACK81,
  key =          "Pollack et al.",
  author =       "F. J. Pollack and K. C. Kahn and R. M. Wilkenson",
  title =        "The i{MAX}-432 Object Filing System",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "ACM SIGOPS",
  year =         "1981",
  pages =        "137--147",
  bibdate =      "Tue Jan 24 10:43:59 1984",
}

@InProceedings{POPEK77,
  key =          "Popek et al.",
  author =       "G. L. Popek and J. J. Horning and B. W. Lampson and J.
                 G. Mitchell and R. L. London",
  title =        "Notes on the design of Euclid",
  booktitle =    "Proceedings of the ACM Conference on Language Design
                 for Reliable Software",
  month =        mar,
  year =         "1977",
  pages =        "11--18",
  bibdate =      "Fri Jul 8 16:42:45 1983",
}

@Article{PU88,
  key =          "Pu et al",
  author =       "C. Pu and H. Massalin and J. Ioannidis",
  title =        "The Synthesis Kernel",
  journal =      "Computing Systems",
  volume =       "1",
  number =       "1",
  year =         "1988",
  pages =        "11--32",
  bibdate =      "Fri Dec 8 11:10:55 1989",
  owner =        "robyn",
}

@Article{QUARTERMAN85,
  key =          "Quarterman et al.",
  author =       "J. S. Quarterman and A. Silberschatz and J. L.
                 Peterson",
  title =        "4.2{BSD} and 4.3{BSD} as Examples of the {UNIX}
                 System",
  journal =      "Computing Surveys",
  publisher =    "ACM",
  volume =       "17",
  number =       "4",
  month =        dec,
  year =         "1985",
  pages =        "379--418",
  keywords =     "Algorithms, design, human factors, performance,
                 reliability, security, flexibility, portability,
                 simplicity",
  abstract =     "This paper presents an in-depth examination of the 4.2
                 Berkeley Software Distribution, Virtual VAX-11 Version
                 4.2BSD, which is a version of the UNIX Time-Sharing
                 System. There are notes throughout on 4.3BSD, the
                 forthcoming system from the University of California at
                 Berkeley. We trace the historical development of the
                 UNIX system from its conception in 1969 until today,
                 and describe the design principles that have guided
                 this development. We then present the internal data
                 structures and algorithms used by the kernel to support
                 the user interface. In particular, we describe process
                 management, memory management, the file system, the I/O
                 system, and communications. These are treated in as
                 much detail as the UNIX license will allow. We conclude
                 with a brief description of the user interface and a
                 set of bibliographic notes.",
  bibdate =      "Wed Sep 17 10:40:39 1986",
  owner =        "manning",
}

@TechReport{RAMACHANDRAN88B,
  key =          "Ramachandran \& Khalidi",
  author =       "U. Ramachandran and M. Y. A. Khalidi",
  title =        "Programming with Distributed Shared Memory",
  number =       "GIT-ICS-88/38",
  institution =  "School of Information and Computer Science",
  address =      "Georgia Institute of Technology, Atlanta, GA",
  year =         "1988",
  month =        oct,
  pages =        "1--26",
  abstract =     "In a distributed system, remote services may be
                 provided by either remote procedure call-RPC-mechanism,
                 or by paging in the required memory segments and
                 performing the services locally. The latter approach,
                 termed Distributed Shared Memory-DSM-has several
                 benefits given the current trend of structuring
                 computing systems using diskless computational servers-
                 workstations-and data servers-file servers. We propose
                 a set of distributed shared memory mechanisms that
                 handle network-wide memory management for an
                 object-based system. We discuss the implementation of
                 these mechanisms and provide examples of their use in
                 implementing the programming language Linda, process
                 migration, two-phase commit, and a distributed game.",
  bibdate =      "Fri Apr 7 16:39:39 1989",
  owner =        "payne",
}

@TechReport{RAMACHANDRAN88C,
  key =          "Ramachandran \& Khalidi",
  author =       "U. Ramachandran and M. Y. A. Khalidi",
  title =        "A Measurement-Based Study of Hardware Support for
                 Object Invocation",
  number =       "GIT-ICS-88/21",
  institution =  "School of Information and Computer Science",
  address =      "Georgia Institute of Technology, Atlanta, GA",
  year =         "1988",
  month =        may,
  pages =        "1--25",
  annote =       "To appear Software-Practice and Experience",
  abstract =     "The object invocation paradigm is attractive for
                 structuring distributed systems. Distributed
                 object-based operating systems view the resources of
                 the system as a collection of objects. Object
                 invocation is the primary mechanism in such systems and
                 is often used as a yardstick for measuring the system
                 performance. However, existing systems of this flavor
                 exhibit poor performance due to the mismatch between
                 the requirements of the object invocation mechanism and
                 the machine architecture. Through measurements of an
                 existing object-based kernel, we present a breakdown of
                 the costs involved in implementing the object
                 invocation mechanism. The measurements suggest
                 architectural solutions to improve the performance of
                 such systems. We present our preliminary studies
                 towards providing hardware support for the object
                 invocation mechanism.",
  bibdate =      "Tue Apr 11 08:48:51 1989",
  owner =        "payne",
}

@TechReport{RAMACHANDRAN88D,
  key =          "Ramachandran et al.",
  author =       "U. Ramachandran and M. Ahamad and M. Y. A. Khalidi",
  title =        "Unifying Synchronization and Data Transfer in
                 Maintaining Coherence of Distributed Shared Memory",
  number =       "GIT-ICS-88/23",
  institution =  "School of Information and Computer Science",
  address =      "Georgia Institute of Technology, Atlanta, GA",
  year =         "1988",
  month =        jun,
  pages =        "1--31",
  bibdate =      "Tue Apr 11 08:58:56 1989",
  owner =        "payne",
}

@TechReport{RASHID80A,
  key =          "Rashid",
  author =       "R. F. Rashid",
  title =        "A Network Operating System for a Distributed Sensor
                 Network",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1980",
  month =        apr,
  type =         "Internal memo",
}

@TechReport{RASHID80B,
  key =          "Rashid",
  author =       "R. F. Rashid",
  title =        "An Inter-Process Communication Facility for {UNIX}",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        mar,
  year =         "1980",
  number =       "CMU-CS-80-124",
}

@InProceedings{RASHID82,
  key =          "Rashid \& Robertson",
  author =       "R. F. Rashid and G. G. Robertson",
  title =        "Accent: {A} communication oriented network operating
                 system kernel",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "ACM",
  year =         "1982",
  pages =        "64--75",
  abstract =     "Accent is a communication oriented operating system
                 kernel being built at Carnegie-Mellon University to
                 support the distributed personal computing project,
                 Spice, and the development of a fault tolerant
                 distributed sensor network (DSN). Accent is built
                 around a single, powerful abstraction of communication
                 between processes, with all kernel functions, such as
                 device access and virtual memory management accessible
                 through messages and distributable thoughout a network.
                 In this paper, specific atention is given to system
                 sypplied facilities which support transparent network
                 access and fault-tolerant behavior. Many of these
                 facilities are already being provided under a modified
                 version of VAX/UNIX. The Accent system itself is
                 currently being implemented on the Three Rivers Corp
                 PERQ.",
}

@InProceedings{RASHID87,
  key =          "Rashid et al.",
  author =       "R. Rashid and A. Tevanian and M. Young and D. Golub
                 and D. Baron and D. Black and W. Bolosky and J. Chew",
  title =        "{Machine-Independent Virtual Memory Management for
                 Paged Uniprocessor and Multiprocessor Architectures}",
  booktitle =    "Proceedings of the Second International Conference on
                 Architectural Support for Programming Languages and
                 Operating Systems (ASPLOS II)",
  organization = "Association for Computing Machinery",
  publisher =    "IEEE",
  address =      "Palo Alto, CA",
  month =        oct,
  year =         "1987",
  pages =        "31--39",
  bibdate =      "Mon Nov 16 12:54:10 1987",
  owner =        "manning",
}

@Article{RAYNER75,
  key =          "Rayner",
  author =       "D. Rayner",
  title =        "Recent Developments in Machine Independent {JCL}",
  journal =      "Software--Practice and Experience",
  volume =       "5",
  pages =        "375--393",
  year =         "1975",
  abstract =     "This paper gives a general survey of recent
                 developments in the field of job control languages.
                 Three high-level job control languages (Unique, GCL,
                 and Able) are presented in outline, and their merits
                 and disadvantages are discussed. The approaches of the
                 MU5 and of single language machines are discussed
                 together with the question that they pose: 'Is a JCL
                 really necessary?' In conclusion particular reference
                 is made to the question of standardization and to
                 continuing work in this field.",
}

@PhdThesis{REDELL74,
  key =          "Redell",
  author =       "David D. Redell",
  title =        "Naming and Protection in Extendible Operating
                 Systems",
  school =       "University of California, Berkeley",
  month =        sep,
  year =         "1974",
  number =       "Reprinted as Project MAC TR-140, Massachusetts
                 Institute of Technology",
  abstract =     "This thesis explores the design and implementation of
                 a capability system providing both free distribution
                 and orderly revocation of capabilities. A generalized
                 capability sealing mechanism is shown to provide
                 selective revocation of capabilities as well as a
                 flexible type extension facility.",
}

@PhdThesis{REED78,
  key =          "Reed",
  author =       "D. Reed",
  title =        "Naming and Synchronization in a Decentralized Computer
                 System",
  school =       "M.I.T.",
  month =        sep,
  year =         "1978",
  bibdate =      "Thu Nov 1 23:17:15 1984",
}

@InProceedings{REID83,
  key =          "Reid \& Karlton",
  author =       "L. G. Reid and P. L Karlton",
  title =        "A File System Supporting Cooperation between
                 Programs",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Bretton Woods, NH",
  month =        oct,
  year =         "1983",
  pages =        "20--29",
  annote =       "The Mesa file system is discussed by Xerox PARC
                 researchers Reid and Karlton. The Mesa file system
                 facilitates inter-process cooperation by asking clients
                 to provide procedures that a file system can call to
                 ask the client to give up a file or tell the client
                 that a file is available. The coding and use of these
                 callback procedures are demonstrated in detail.",
  bibdate =      "Fri Feb 1 12:36:24 1985",
}

@InProceedings{RICCARDI85,
  key =          "Riccardi \& Baker",
  author =       "G. A. Riccardi and T. P. Baker",
  title =        "A Runtime Supervisor To Support Ada Tasking:
                 Rendezvous and Delays",
  booktitle =    "Proceedings of the Ada International Conference on Ada
                 in Use",
  organization = "ACM",
  publisher =    "Cambridge University Press",
  address =      "Paris",
  editor =       "J. G. P. Barnes and Jr. G. A. Fisher",
  month =        may,
  year =         "1985",
  pages =        "329--342",
  abstract =     "This paper describes a simple and efficient approach
                 to implementing the Ada operations of entry calls,
                 conditional and timed entry calls, accept statements,
                 selective wait statements and delay statements. This is
                 accomplished by describing the tasking supervisor -- a
                 collection of programs which control the tasking
                 operations. Ada definitions of the data structures and
                 the supervisor procedures are given. The semantics of
                 the Ada tasking operations are related to the
                 supervisor by following the description of tasking in
                 Chapter 9 of the Reference Manual for the Ada
                 Programming Language (1983). The structure of the
                 object code for various Ada source language constructs
                 is given. The interaction between the Ada object code
                 and the run-time supervisor is described in detail. The
                 remaining tasking operations are described in Part 1 of
                 this report (Riccardi and Baker 1984).",
  bibdate =      "Tue Sep 10 14:19:35 1985",
}

@InProceedings{RICHARDSON83,
  key =          "Richardson \& Needham",
  author =       "M. F. Richardson and R. M. Needham",
  title =        "The {TRIOS} Filing Machine, a front end to a File
                 Server",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "Association for Computing Machinery",
  publisher =    "Association for Computing Machinery",
  address =      "Bretton Woods, NH",
  month =        oct,
  year =         "1983",
  pages =        "120--128",
  abstract =     "The TRIPOS Filing Machine attempts to remove some of
                 these drawbacks. Its general function may be described
                 quite briefly. It is itself one of the processor bank
                 computers, but contains the only full copy of the
                 TRIPOS filing system code. The TRIPOS system which is
                 run in processor bank machines allocated to users has
                 the filing system code replaced by stubs which make
                 remote procedure calls on the filing machine. The
                 filing machine acts upon these requests, and makes use
                 of the file server as necessary. It is able to cache
                 file server material, to read ahead material which
                 appears to be being accessed in a sequential manner,
                 and to maintain a cached abstract of relevant parts of
                 the directory structure to permit rapid interpretation
                 of path names. It is able to manage interlocks in a
                 system, rather than by making use of the general
                 facilities provided by the file server. It can also
                 provide protection and accounting facilities which
                 should not otherwise be inplemented securely.",
  bibdate =      "Fri Feb 1 13:52:49 1985",
}

@InProceedings{RIDDLE78A,
  key =          "Riddle et al.",
  author =       "W. E. Riddle and J. H. Sayler and A. R. Segal and A.
                 M. Stavely and J. C. Wileden",
  title =        "A Description Scheme to Aid the Design of Collections
                 of Concurrent Processes",
  organization = "Association for Computing Machinery",
  booktitle =    "CompCon 1978",
  year =         "1978",
}

@Article{RIDDLE79,
  key =          "Riddle",
  author =       "W. E. Riddle",
  title =        "An Approach to Software System Behavior Description",
  journal =      "Computer Languages",
  volume =       "4",
  year =         "1979",
  pages =        "29--47",
  bibdate =      "Thu Jan 12 22:46:40 1984",
}

@TechReport{RIGGLE84,
  key =          "Riggle",
  author =       "D. W. Riggle",
  title =        "A Name Server Database",
  number =       "UCB/CSD 84/174",
  institution =  "Computer Science Department, University of California
                 at Berkley",
  year =         "1984",
  month =        may,
  abstract =     "A name server maps names to network addresses. It
                 needs to maintain only a small amount of data to
                 accomplish this feat. A special purpose database of
                 simple design can provide much better performance than
                 a general purpose database. This paper describes such
                 an implementation.",
  bibdate =      "Mon Mar 4 11:18:31 1985",
}

@Article{SALTZER74A,
  key =          "Saltzer",
  author =       "J. H. Saltzer",
  title =        "Protection and the Control of Information Sharing in
                 Miltics",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "17",
  number =       "7",
  month =        jul,
  year =         "1974",
  pages =        "388--402",
  bibdate =      "Fri Jan 6 13:44:48 1984",
}

@Article{SALTZER75,
  key =          "Saltzer \& Schroeder",
  author =       "J. Saltzer and M. Schroeder",
  title =        "The Protection of Information in Computer Systems",
  journal =      "procieee",
  volume =       "63",
  number =       "19",
  month =        sep,
  year =         "1975",
  pages =        "1278--1308",
  bibdate =      "Fri Jan 6 13:42:09 1984",
}

@Article{SALTZER84,
  key =          "Saltzer et al.",
  author =       "Jerome H. Saltzer and David P. Reed and David D. Clark",
  title =        "End-To-End Arguments in System Design",
  journal =      "ACM Transactions on Computer Systems",
  volume =       "2",
  number =       "4",
  month =        nov,
  year =         "1984",
  pages =        "277--288",
  keywords =     "design; data communication; protocol design; design
                 principles",
  abstract =     "This paper presents a design principle that helps
                 guide placement of functions among the modules of a
                 distributed computer system. The principle, called the
                 end-to-end argument, suggests that functions placed at
                 low levels of a system may be redundant or of little
                 value when compared with the cost of providing them at
                 that low level. Examples discussed in the paper include
                 bit-error recovery, security using encryption,
                 duplicate message suppression, recovery from system
                 crashes, and delivery acknowlegement. Low-level
                 mechanisms to support these functions are justified
                 only as performed enhancements.",
  bibdate =      "Wed Mar 6 11:12:06 1985",
}

@MastersThesis{SATYANARAYANAN77,
  key =          "Satyanarayanan",
  author =       "M. Satyanarayanan",
  title =        "Software for Efficient Disk Utilization",
  school =       "Indian Institute of Technology, Madras",
  month =        jul,
  year =         "1977",
  keywords =     "memory hierarchy",
  bibdate =      "Tue Nov 10 15:47:30 1981",
}

@Book{SATYANARAYANAN80,
  key =          "Satyanarayanan",
  author =       "M. Satyanarayanan",
  title =        "Multiprocessors, {A} Comparative Study",
  publisher =    "Prentice-hall, Inc.",
  year =         "1980",
}

@InProceedings{SATYANARAYANAN81A,
  key =          "Satyanarayanan",
  author =       "M. Satyanarayanan",
  title =        "A Study of File Sizes and Functional Lifetimes",
  booktitle =    "Proceedings of the Eigth Symposium on Operating System
                 Principles",
  address =      "Asilomar, CA",
  month =        dec,
  year =         "1981",
  keywords =     "memory hierarchy, Architectures",
  bibdate =      "Mon Nov 9 16:20:19 1981",
}

@Article{SATYANARAYANAN81B,
  key =          "Satyanarayanan \& Bhandarkar",
  author =       "M. Satyanarayanan and D. P. Bhandarkar",
  title =        "Design Trade-Offs in {VAX}-11 Translation Buffer
                 Organization",
  journal =      "Computer",
  volume =       "14",
  number =       "12",
  month =        dec,
  year =         "1981",
  keywords =     "simulation",
  bibdate =      "Sat Nov 14 18:22:28 1981",
}

@PhdThesis{SATYANARAYANAN83,
  key =          "Satyanarayanan",
  author =       "M. Satyanarayanan",
  title =        "A Methodology for Modelling Storage Systems and its
                 Application to a Network File System",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        mar,
  year =         "1983",
  note =         "CMU-CS-83-109",
  bibdate =      "Thu Jun 23 16:46:22 1983",
}

@TechReport{SATYANARAYANAN87A,
  key =          "Satyanarayanan \& Siegel",
  author =       "M. Satyanarayan and E. H. Siegel",
  title =        "Parallel Communication in a Large Distributed
                 Environment",
  institution =  "Department of Computer Science",
  address =      "Carnegie-Mellon University, Pittsburgh, PA",
  year =         "1987",
  pages =        "1--36",
  abstract =     "In this paper we describe the evolution of MultiRPC, a
                 parallel remote invocation mechanism designed for
                 operation in a complex networking environment. The
                 underlying communication medium does not have to
                 support multicast or broadcast transmissions.
                 Parallelism is obtained from the concurrency of
                 processing on servers and from the overlapping of
                 retransmissions and timeouts. Each of the parallel
                 calls retains the semantics and functionality of our
                 standard remote procedure calls, including secure
                 communication and the use of application-specific side
                 effects. We derive an analytic model of the system,
                 validate this model, and present experimental
                 observations on contacting up to 100 servers in
                 parallel.",
  bibdate =      "Mon Feb 15 11:17:44 1988",
  owner =        "manning",
}

@TechReport{SATYANARAYANAN87B,
  key =          "Satyanarayanan",
  author =       "M. Satyanarayanan",
  title =        "On the Influence of Scale in a Distributed System",
  institution =  "Department of Computer Science",
  address =      "Carnegie-Mellon University, Pittsburgh, PA",
  year =         "1987",
  month =        sep,
  pages =        "1--13",
  abstract =     "Scale should be recognized as a primary factor
                 influencing the architecture and implementation of
                 distributed systems. This paper uses Andrew, a
                 distributed environment at Carnegie-Mellon University,
                 to validate this proposition. The design of Andrew is
                 dominated by considerations of performance, operability
                 and security. Caching of information and placing trust
                 in a few machines as possible emerge as two general
                 principles that enhance scalability. The separation of
                 concerns made possible by specialized mechanisms is
                 also valuable. Heterogeneity is a natural consequence
                 of growth and anticipating it in the initial stages of
                 system design is important. A location transparent
                 shared file system considerably enhances the usability
                 of a distributed environment.",
  bibdate =      "Mon Feb 15 11:31:29 1988",
  owner =        "manning",
}

@Article{SATYANARAYANAN89,
  key =          "Satyanarayanan",
  author =       "M. Satyanarayanan",
  title =        "Integrating Security in a Large Distributed System",
  journal =      "ACM Transactions on Computer Systems",
  volume =       "7",
  number =       "3",
  month =        aug,
  year =         "1989",
  pages =        "247--280",
  keywords =     "Access lists; AFS; Andrew; Needham-Schroeder; negative
                 rights; orange book; protection domain; RPC;
                 scalability; trust; UNIX",
  bibdate =      "Mon Sep 25 14:29:11 1989",
  owner =        "robyn",
}

@PhdThesis{SAUNDERS79,
  key =          "Saunders",
  author =       "S. E. Saunders",
  title =        "Compiling Customized Executable Representations and
                 Interpreters",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jun,
  year =         "1979",
  note =         "Avalable as TR CS-79-127",
  bibdate =      "Wed Dec 29 20:08:09 1982",
}

@TechReport{SCELZA77,
  key =          "Scelza",
  author =       "D. A. Scelza",
  title =        "Host User's Manual",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        sep,
  year =         "1977",
  note =         "Cm* project internal document.",
}

@TechReport{SCELZA79,
  key =          "Scelza \& Lebovitz",
  author =       "D. A. Scelza and R. Lebovitz",
  title =        "{DA} Link File Transfer System",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        sep,
  year =         "1979",
  note =         "Cm* project internal document.",
}

@TechReport{SCHATZ79,
  key =          "Schatz et al.",
  title =        "{TCOLA}da: An Intermediate Representation for the
                 {DOD} Standard Programming Language",
  author =       "B. R. Schatz and B. W. Leverett and J. M. Newcomer and
                 A. H. Reiner and W. A. Wulf",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1979",
  month =        mar,
}

@InProceedings{SCHROEDER77,
  author =       "M. D. Schroeder and D. D. Clark and J. H. Saltzer",
  title =        "The {MULTICS} Kernel Design Project",
  booktitle =    "Proceedings of the ACM Symposium on Operating System Principles",
  month =        nov,
  year =         "1977",
  pages =        "43--56",
  bibdate =      "Thu Jan 12 16:10:14 1984",
}

@Article{SCHROEDER84,
  key =          "Schroeder et al.",
  author =       "M. D. Schroeder and A. D. Birrell and R. M. Needham",
  title =        "Experience with Grapevine: The Growth of a Distributed
                 System",
  journal =      "ACM Transactions on Computer Systems",
  publisher =    "Association for Computing Machinery",
  volume =       "2",
  number =       "1",
  month =        feb,
  year =         "1984",
  pages =        "3--23",
  keywords =     "Design; experimentation; reliability; Grapevine",
  abstract =     "Grapevine is a distributed, replicated system that
                 provides message delivery, naming, authentication,
                 resource location, and access control services in an
                 internet of computers. The system, described in a
                 previous paper [1], was designed and implemented
                 several years ago. We now have had operational
                 experience with the system under substantial load. In
                 this paper we report on what we have learned from using
                 Grapevine.",
  bibdate =      "Thu Jan 15 14:49:51 1987",
  owner =        "manning",
}

@TechReport{SCHROEDER85,
  key =          "Schroeder et al.",
  author =       "M. D. Schroeder and D. K. Gifford and R. M. Needham",
  title =        "A Caching File System for a Programmer's Workstation",
  number =       "6",
  institution =  "Digital Systems Research Center",
  address =      "Palo Alto, CA",
  year =         "1985",
  month =        oct,
  pages =        "1--23",
  abstract =     "This paper describes a workstation file system that
                 supports a group of cooperating programmers by allowing
                 them both to manage local naming environments and to
                 share consistent versions of collections of software.
                 The file system has access to the workstation's local
                 disk and to remote file servers, and provides a
                 hierarchical name space that includes the files on
                 both. Local names can refer to local files or be
                 attached to remote files. Remote files, which also may
                 be referred to directly, are immutable and cached on
                 the local disk. The file system is part of the Cedar
                 experimental programming environment at Xerox PARC and
                 has been in use since late 1983.",
  bibdate =      "Thu Jan 15 15:29:37 1987",
  owner =        "manning",
}

@InProceedings{SCHWAN84,
  key =          "Schwan \& Ramnath",
  author =       "K. Schwan and R. Ramnath",
  title =        "Adaptable, Operating Software for Real-time Systems:
                 {A} Computer Science Research Agenda",
  booktitle =    "Fifth Real-Time Systems Symposium",
  organization = "IEEE",
  address =      "Austin, TX",
  month =        dec,
  year =         "1984",
  bibdate =      "Tue Jul 16 14:58:42 1985",
}

@InProceedings{SCHWAN85,
  key =          "Schwan \& Gaimon",
  author =       "K. Schwan and C. Gaimon",
  title =        "Automating Resource Allocation for the Cm*
                 Multiprocessor",
  booktitle =    "5th International Conference on Distributed
                 Computing",
  month =        may,
  year =         "1985",
  bibdate =      "Tue Jul 16 14:47:06 1985",
}

@Book{SCHWAN85A,
  key =          "Schwan",
  author =       "K. Schwan",
  title =        "Tailoring Software for Multiple Processor Systems",
  publisher =    "UMI Research Press",
  address =      "Ann Arbor, MI",
  year =         "1985",
  series =       "Computer Science Series",
  bibdate =      "Wed Jul 17 11:23:47 1985",
}

@Article{SCHWAN85B,
  key =          "Schwan \& Kaelbling",
  author =       "K. Schwan and M. Kaelbling",
  title =        "A Testbed for High-Performance Parallel Software",
  journal =      "ACM SIGOPS Notices",
  month =        apr,
  year =         "1985",
  bibdate =      "Tue Jul 16 14:54:05 1985",
}

@TechReport{SCHWAN85C,
  key =          "Schwan",
  author =       "K. Schwan",
  title =        "Writing and Executing Adaptable, Parallel Software",
  number =       "OSU-CISRC-TR-85-7",
  institution =  "Ohio State University",
  year =         "1985",
  month =        apr,
  abstract =     "Complex electro-mechanical systems require
                 computational speeds and reliabilities far beyond the
                 capabilities of current, embedded computer systems.
                 Therefore, the use of computers and sofware offering
                 substantial parallelism is becoming essential. Parallel
                 software for such real-time systems must be flexible in
                 functionality and adaptavble in performance and
                 reliability, thereby able to accommodate changes in
                 technology and in a application requirements. Flexible
                 and adaptable real-time software requires substantial
                 programming and operating system support. The structure
                 and content of this support are investigated in this
                 research. Specifically, we describe an integrated
                 programming/operating system in which programmers are
                 assisted in performing software adaptations and in
                 making adaptation decisions. Two sample adaptations of
                 real-time software illuminate the functionalities of
                 the different tools within the system.",
  bibdate =      "Tue Jul 16 15:43:18 1985",
}

@TechReport{SCHWAN85D,
  key =          "Schwan et al.",
  author =       "K. Schwan and T. Bihari and G. Weide W. B. Taulbee",
  title =        "{GEM}: Operating System Primitives for Robotics and
                 Real-Time Control Systems",
  number =       "OSU-CISRC-TR-85-7",
  institution =  "Ohio State University",
  year =         "1985",
  month =        feb,
  bibdate =      "Tue Jul 16 16:13:43 1985",
}

@InProceedings{SCHWAN86A,
  key =          "Schwan et al.",
  author =       "K. Schwan and R. Ramnath and S. Sarkar and S.
                 Vasudevan",
  title =        "{COOL}- {A} Language for Constructing and Tuning
                 Parallel Programs",
  booktitle =    "First International Conference on Computing Language",
  organization = "IEEE",
  month =        oct,
  year =         "1986",
  abstract =     "A pervasive issue regarding parallel architectures in
                 their programmability. This paper argues that new
                 programming constructs and associated programming tools
                 are required for the development of parallel programs.
                 Language constructs and programming tools should
                 support the explicit tuning of rapidly prototyped
                 software with respect to its performance and
                 reliability. Such tuning should be possible statically,
                 prior to program execution, and dynamically, during
                 program execution, using current knowledge of the
                 hardware and operating system configurations, and
                 monitored program information.",
  bibdate =      "Mon Feb 15 12:14:01 1988",
  owner =        "manning",
}

@Article{SCHWAN87A,
  key =          "Schwan et al.",
  author =       "K. Schwan and T. Bihari and B. W. Weide and G.
                 Taulbee",
  title =        "High-Performance Operating System Primitives for
                 Robotics and Real-Time Control Systems",
  journal =      "ACM Transactions on Computer Systems",
  publisher =    "Association for Computing Machinery",
  volume =       "5",
  number =       "3",
  month =        aug,
  year =         "1987",
  pages =        "189--231",
  keywords =     "Design; experimentation; measurement; performance;
                 light-weight processes; operating software;
                 parallelism; robotics",
  bibdate =      "Fri Sep 4 14:23:20 1987",
  owner =        "manning",
}

@Unpublished{SCHWANS78,
  key =          "Schwans",
  author =       "K. Schwans",
  title =        "The Star{OS} Module Loader",
  year =         "1978",
  note =         "Internal Working Paper of the StarOS Group",
}

@TechReport{SCHWANS80,
  key =          "Schwans",
  author =       "K. Schwans",
  title =        "The {TASK} Support System",
  year =         "1980",
  type =         "StarOS Group Internal Workng Paper",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
}

@TechReport{SCHWANS81,
  key =          "Schwans",
  author =       "K. Schwans",
  title =        "The {TASK} Compiler",
  year =         "1981",
  type =         "StarOS Group Internal Working Paper",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
}

@TechReport{SCHWANS82A,
  key =          "Schwans",
  author =       "K. Schwans",
  title =        "The {TASK} Language",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jul,
  year =         "1982",
}

@PhdThesis{SCHWANS82B,
  key =          "Schwans",
  author =       "K. Schwans",
  title =        "Configuring software for multiple processor systems",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "Sprng, 1982",
}

@InProceedings{SEVCIK72,
  key =          "Sevcik et al.",
  author =       "K. C. Sevcik and J. W. Atwood and M. S. Grushcow and
                 J. J. Horning and Tsichrizis D.",
  title =        "Project {SUE} as a learning experience",
  booktitle =    "Proceedings of the AFIPS Fall Joint Computer
                 Conference",
  pages =        "331--338",
  year =         "1972",
  abstract =     "Project SUE was an effort to develop an efficient,
                 extensible, reliable, understandable state of the art
                 operating system for the IBM System/360. Processes are
                 organized in a partially ordered hierarchy, with a form
                 of message passing (facility calls) for communication
                 and synchronization. A restricted capability mechanism
                 is used for authorization and accounting purposes. The
                 system was written in a custom implementation language.
                 There is no mention of user interface issues.",
}

@Article{SEWRY84B,
  key =          "Sewry",
  author =       "D. A. Sewry",
  title =        "Modula-2 Process Facilities",
  journal =      "ACM SIGPlan Notices",
  volume =       "19",
  number =       "11",
  month =        nov,
  year =         "1984",
  pages =        "23--32",
  bibdate =      "Thu Feb 7 12:31:24 1985",
}

@InProceedings{SHAW72,
  key =          "Shaw \& Weiderman",
  author =       "A. C. Shaw and N. H. Weiderman",
  title =        "A Multiprogramming System For Education and Research",
  booktitle =    "Proceedings of the IFIP Information Processing '71",
  publisher =    "North-Holland Publishing Company",
  year =         "1972",
  pages =        "1505--1509",
  abstract =     "A novel multiprogramming case study which has proven
                 useful in operating systems education and research is
                 presented. The operating system and its unusual
                 hypothetical machine are specified. The paper then
                 describes experience with the case study as a class
                 project involving hardware simulation, and systems
                 design and inplementation; and as a research tool for
                 testing new ideas in operating systems primitives and
                 design methodologies. It is concluded that case studies
                 of this type will be widely used in the future.",
  bibdate =      "Mon Jul 22 08:59:31 1985",
}

@Unpublished{SHOCH81,
  key =          "Shoch",
  author =       "J. Shoch",
  title =        "What's Different About 'Distributed Computing'?",
  note =         "in @cite(Liskov81)",
  year =         "1981",
}

@InProceedings{SINDHU80A,
  title =        "Medusa",
  author =       "P. S. Sindhu",
  booktitle =    "The Cm* Multiprocessor Project: A Research Review,
                 Eds. Jones and Gehringer",
  year =         "1980",
  month =        jul,
  organization = "Computer Science Department, Carnegie-Mellon
                 University",
  key =          "Sindhu",
}

@InProceedings{SINDHU80B,
  title =        "The Structure of Cm*",
  author =       "P. S. Sindhu",
  booktitle =    "The Cm* Multiprocessor Project: A Research Review,
                 Eds. Jones and Gehringer",
  year =         "1980",
  month =        jul,
  organization = "Computer Science Department, Carnegie-Mellon
                 University",
  key =          "Sindhu",
}

@PhdThesis{SINDHU84,
  key =          "Sindhu",
  author =       "P. S. Sindhu",
  title =        "Distribution and Reliability in a Multiprocessor
                 Operating System",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        apr,
  year =         "1984",
  bibdate =      "Tue Aug 28 13:32:56 1984",
}

@Unpublished{SINGH81A,
  key =          "Singh",
  author =       "A. Singh",
  title =        "A Synthetic Workload Generator for the Cm*
                 Multiprocessor",
  year =         "1981",
}

@MastersThesis{SINGH81B,
  key =          "Singh",
  author =       "A. Singh",
  title =        "Pegasus: {A} Controllable, Interactive, Workload
                 Generator for Multiprocessors",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        dec,
  year =         "1981",
  owner =        "Rick Snodgrass",
  bibdate =      "Sun Aug 7 18:29:46 1983",
}

@Unpublished{SINGH82,
  key =          "Singh \& Segall",
  title =        "Synthetic Workload Generation for Experimentation wth
                 Multiprocessors",
  author =       "A. Singh and Z. Segall",
  year =         "To be publshed 1982",
}

@Article{SKEEN85,
  key =          "Skeen",
  author =       "D. Skeen",
  title =        "Determining the Last Process to Fail",
  journal =      "ACM Transactions on Computer Systems",
  volume =       "3",
  number =       "1",
  month =        feb,
  year =         "1985",
  pages =        "15--30",
  keywords =     "algorithms; reliability; cooperative processes; total
                 failure; event ordering",
  abstract =     "A total failure occurs whenever all processes
                 cooperatively executing a distributed task fail before
                 the task completes. A frequent prerequisite for
                 recovery from a total failure is identification of the
                 last set (LAST) of processes to fail. Necessary and
                 sufficient conditions are derived here for computing
                 LAST from the local failure data of recovered
                 processes. These conditions are then translated into
                 procedures for deciding LAST membership, using either
                 complete or incomplete failure data. The choice of
                 failure data is itself dictated by two requirements:
                 (1) it can be cheaply maintained, and (2) it must
                 afford maximum fault-tolerance in the sense that the
                 expected number of recoveries required for identifying
                 LAST is minimized.",
  bibdate =      "Fri Apr 12 08:51:45 1985",
}

@Article{SMITH80B,
  key =          "Smith",
  author =       "R. G. Smith",
  title =        "The Contract Net Protocol: High Level Communication
                 and Control in a Distributed Problem Solver",
  journal =      "IEEE Transactions on Computers",
  volume =       "C-29",
  number =       "12",
  month =        dec,
  year =         "1980",
  pages =        "1104--1113",
  abstract =     "The contract net protocol has been developed to
                 specify problem-solving communication and control for
                 nodes in a distributed problem solver. Task
                 distribution is affected by a negotiation process, a
                 discussion carried on between nodes with tasks to be
                 executed and nodes that may be able to execute those
                 tasks. We present the specification of the protocol and
                 demonstrate its use in the solution of a problem in
                 distributed sensing. The utility of negotiation as an
                 interaction mechanism is discussed. It can be used to
                 achieve different goals, such as distributing control
                 and data to avoid bottlenecks and enabling a finer
                 degree of control in making resource allocation and
                 focus decisions than is possible with traditional
                 mechanisms.",
  bibdate =      "Thu Jan 31 14:25:17 1985",
}

@TechReport{SNODGRASS80,
  key =          "Snodgrass",
  author =       "R. Snodgrass",
  title =        "An Object-Oriented Command Language",
  number =       "146",
  institution =  "Computer Science Department, Carnegie-Mellon
                 University",
  year =         "1980",
  month =        oct,
}

@Article{SNODGRASS83A,
  key =          "Snodgrass",
  author =       "R. Snodgrass",
  title =        "An Object-Oriented Command Language",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-8",
  number =       "1",
  month =        jan,
  year =         "1983",
  pages =        "1--8",
  bibdate =      "Wed Dec 29 23:11:25 1982",
}

@Article{SPECTOR82,
  key =          "Spector",
  author =       "A. Z. Spector",
  title =        "Performing Remote Operations Efficiently on a Local
                 Computer Network",
  journal =      "Communications of the Association of Computing
                 Machinery",
  volume =       "25",
  number =       "4",
  month =        apr,
  year =         "1982",
  pages =        "246--259",
  abstract =     "A communication model is described that can service as
                 a basis for a highly efficient communication subsystem
                 for local networks. The model contains a taxonomy of
                 communication instructions that can be implemented
                 efficiently and can be a good basis for interprocessor
                 communication. These communication instructions, called
                 remote references, cause an operation to be performed
                 by a remote process and, optionally, cause a value to
                 be returned. This paper also presents implementation
                 considerations for a communication system based upon
                 the model and describes an experimental communication
                 subsystem that provides one class of remote references.
                 These remote references take about 150 microseconds or
                 50 average instruction times to perform on Xerox Alto
                 computers connected by a 2.94 megabit Ethernet.",
  bibdate =      "Mon Oct 15 09:12:28 1984",
}

@Article{SPECTOR83,
  key =          "Spector \& Schwarz",
  author =       "A. Z. Spector and P. M. Schwarz",
  title =        "Transactions: {A} Construct for Reliable Distributed
                 Computing",
  journal =      "ACM SIGPlan Notices",
  volume =       "17",
  number =       "2",
  month =        apr,
  year =         "1983",
  pages =        "18--35",
  abstract =     "Transactions have proven to be a useful tool for
                 constructing reliable database systems and are likely
                 to be useful in many types of distributed systems. To
                 exploit transactions in a general purpose distributed
                 system, each node can execute a transaction kernel that
                 provides services necessary to support transactions at
                 higher system levels. The transaction model that the
                 kernel supports must permit arbitrary operations on the
                 wide collection of data types used by programmers. New
                 techniques must be developed for specifying the
                 synchronization and recovery properties of abstract
                 types that are used in transactions. Existing
                 mechanisms for synchronization, recovery, deadlock
                 management and communication are often inadequae to
                 implement these types effeciently, and they must be
                 adapted or replaced.",
  bibdate =      "Thu Oct 13 23:14:55 1983",
}

@TechReport{STEMPLE84A,
  key =          "Stemple et al.",
  author =       "D. Stemple and S. T. Vinter and K. Ramamritham",
  title =        "Interprocess Communication Without Process
                 Identifiers",
  type =         "COINS",
  number =       "84-36",
  institution =  "University of Massachusetts",
  year =         "1984",
  bibdate =      "Fri Apr 26 08:56:45 1985",
}

@Article{STONE77,
  key =          "Stone",
  author =       "H. S. Stone",
  title =        "Multiprocessor Scheduling with the Aid of Network Flow
                 Algorithms",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-3",
  number =       "1",
  month =        jan,
  year =         "1977",
  pages =        "85--93",
}

@Article{STONE79,
  key =          "Stone et al.",
  author =       "G. S. Rao and H. S. Stone and T. C. Hu",
  title =        "Assignment of Tasks in a Distributed System with
                 Limited Memory",
  journal =      "Trans. on Software Eng.",
  volume =       "C-28,4",
  month =        apr,
  year =         "1979",
  pages =        "291--299",
}

@Article{STOTTS82,
  key =          "Stotts",
  author =       "P. D. Stodds Jr.",
  title =        "A Comparative Survey of Concurrent Programming
                 Languages",
  journal =      "ACM SIGPlan Notices",
  volume =       "17",
  number =       "9",
  month =        sep,
  year =         "1982",
  pages =        "76--87",
  bibdate =      "Fri Oct 12 13:42:32 1984",
}

@TechReport{SUBLER87,
  key =          "Subler et al.",
  author =       "P. A. Subler and J. Biswas and K. M. Korner",
  title =        "{TDFL}: {A} Task-Level Data Flow Language",
  number =       "TR-87-44",
  institution =  "Department of Computer Sciences",
  address =      "University of Texas, Austin, TX",
  year =         "1987",
  month =        dec,
  pages =        "1--17",
  keywords =     "data flow; coarse-grain parallelism; graphical
                 programming",
  abstract =     "The Task-Level Data Flow Language-TDFL- is a graphical
                 programming language intended for the writing of new
                 programs and the adaptation of existing ones. A
                 computation is represented as a directed graph. As each
                 node contains a subroutine-sized task, this is
                 considered to be coarse-grained parallelism. The task
                 functions are written in standard sequential high-level
                 languages. Two versions have been implemented, one
                 supporting static and one supporting dynamic
                 computation graphs. This paper discusses previous data
                 flow languages, presents the definition of TDFL,
                 describes its implementations on the Sequent Balance
                 shared-memory multiprocessors, and presents several
                 programs and their performance figures.",
  bibdate =      "Thu May 19 15:54:50 1988",
  owner =        "manning",
}

@Manual{SUN85A,
  key =          "Sun",
  title =        "Remote Procedure Call",
  year =         "1985",
  author =       "Inc. Sun Microsystems",
  organization = "Sun Microsystems, Inc.",
  address =      "Mountain View, CA",
  bibdate =      "Tue Mar 5 09:32:51 1985",
}

@Manual{SUN85B,
  key =          "Sun",
  title =        "External Data Representation",
  year =         "1985",
  author =       "Inc. Sun Microsystems",
  organization = "Sun Microsystems, Inc.",
  address =      "Mountain View, CA",
  bibdate =      "Tue Mar 5 09:33:59 1985",
}

@TechReport{SVOBODA79,
  key =          "Svoboda et al.",
  author =       "L. Svoboda and B. Liskov and D. and Clark",
  title =        "Distributed Computer Systems: Structure and
                 Semantics",
  institution =  "Laboratory for Computer Science, M.I.T.",
  number =       "TR-215",
  month =        mar,
  year =         "1979",
}

@TechReport{SVOBODOVA82,
  key =          "Svobodova",
  author =       "L. Svobodova",
  title =        "File Servers For Network-Based Distributed Systems",
  institution =  "IBM Zurich Research Laboratory",
  type =         "Rz",
  number =       "1258",
  month =        nov,
  year =         "1982",
  abstract =     "A file server provides remote centralized storage of
                 data to workstation connected to it via a communication
                 network. Such an arrangement facilitates data sharing
                 among autonomous workstations and support of
                 inexpensive workstations, with no or limited secondary
                 storage. Based on a survey of a number of experimental
                 file servers, this paper discusses and evaluates
                 various characteristics of file servers as viewed by
                 their clients and the corresponding implementation
                 issues. The paper puts emphasis on the problem of
                 atomic update of data stored in a file server. The
                 design issues related to the scope of atomic
                 transactions and the granularity of data access
                 supported by a file server are studied in detail.",
  bibdate =      "Thu Apr 11 16:33:35 1985",
}

@InProceedings{SWAN77B,
  key =          "Swan et al.",
  title =        "The implementation of the Cm* multi-microprocessor",
  author =       "R. J. Swan and A. Bechtolshem and K. W. Lai and J. K.
                 Ousterhout",
  year =         "1977",
  booktitle =    "Proceedings of the AFIPS National Computer
                 Conference",
  publisher =    "AFIPS",
  pages =        "645--55",
}

@Article{TANENBAUM85,
  key =          "Tanenbaum \& VanRenesse",
  author =       "A. S. Tanenbaum and R. VanRenesse",
  title =        "Distributed Operating Systems",
  journal =      "Computing Surveys",
  publisher =    "ACM",
  volume =       "17",
  number =       "4",
  month =        dec,
  year =         "1985",
  pages =        "419--470",
  keywords =     "Algorithms, design, experimentation, reliability,
                 security, file server",
  abstract =     "Distributed operating systems have many aspects in
                 common with centralized ones, but they also differ in
                 certain ways. This paper is intended as an introduction
                 to distributed operating systems, and especially to
                 current university research about them. After a
                 discussion of what constitutes a distributed operating
                 system and how it is distinguished from a computer
                 network, various key design issues are discussed. Then
                 several examples of current research projects are
                 examined in some detail, namely, the Cambridge
                 Distributed Computing System, Amoeba, V, and Eden.",
  bibdate =      "Wed Sep 17 10:49:04 1986",
  owner =        "manning",
}

@PhdThesis{TICHY80,
  key =          "Tichy",
  author =       "W. F. Tichy",
  title =        "Software Development Control Based on System Structure
                 Description",
  school =       "Computer Science Department, Carnegie-Mellon
                 University",
  month =        jan,
  year =         "1980",
}

@TechReport{VANDEVOORDE88,
  key =          "Vandevoorde",
  author =       "M. T. Vandevoorde",
  title =        "Parallel Compilation on a Tightly Coupled
                 Multiprocessor",
  number =       "26",
  institution =  "Digital Systems Research Center",
  address =      "Palo Alto, CA",
  year =         "1988",
  month =        mar,
  pages =        "1--87",
  abstract =     "This thesis describes a C compiler that runs in
                 parallel on a tightly coupled multiprocessor. The
                 compiler, called PTCC, consists of a two-stage
                 pipeline. The first stage performs extended lexical
                 analysis for the second stage, which does the parsing
                 and assembly code generation. The second stage
                 processes units of the source program concurrently.
                 Units as fine as a single statement are compiled in
                 parallel. To avoid unproductive concurrency, a new
                 scheduling abstraction, called WorkCrew, is used in
                 PTCC. In the WorkCrew model of computation, the client
                 creates tasks and specifies how they can be subdivided.
                 WorkCrews favor serial execution when parallel
                 execution is unproductive and coarser grains of
                 parallelism over finer ones. Several experiments were
                 done to measure the performance of PTCC. With 5
                 processors, PTCC performed up to 3.3 times better than
                 a similar sequential compiler.",
}

@TechReport{VINTER82,
  key =          "Vinter et al.",
  author =       "S. Vinter and K. Ramamritham and D. Stemple",
  title =        "Protecting Objects Through the Use of Ports",
  type =         "COINS",
  number =       "82-23",
  institution =  "University of Massachusetts at Amherst",
  year =         "1982",
  abstract =     "In several systems, ports have been utilized as
                 communication channels between cooperating processes.
                 We extend the use of ports for achieving protection of
                 shared objects. For this purpose, a port is viewed as
                 an abstract data type and protection is achieved by
                 restricting the operations that are available to
                 processes for manipulating ports. Further, we equate
                 ownership of a port with possession of a capability to
                 request operations on an object. In this peper, we
                 examine the design issues involved in such a paradigm
                 of communication and protection. In particular, we
                 investigate primitive port operations, port connection
                 establishment, synchronization and cooperation among
                 processes mediated by ports, message structure. This
                 investigation reveals those questions that need to be
                 answered during the design of systems which use ports
                 to achieve communication and protection.",
  bibdate =      "Thu Feb 28 15:58:10 1985",
}

@InProceedings{WARREN79A,
  key =          "Warren",
  author =       "S. K. Warren and D. Abbe",
  title =        "Rosetta Smalltalk: {A} Conversational Extensible
                 Microcomputer Language",
  booktitle =    "Proceedings of the Second Symposium on Small Systems",
  pages =        "36--45",
  month =        oct,
  year =         "1979",
  abstract =     "Rosetta Smalltalk is a personal information handling
                 environment for low-cost microcomputers based on
                 Smalltalk-72. Windows are dealt with in detail, as are
                 the predefined objects available in the system. The
                 system's most interesting aspect is that it requires
                 very little resources to run, occupying approximately
                 16K bytes and running about as fast as interpreted
                 Basic.",
}

@Article{WATSON87,
  key =          "Watson \& Mamrak",
  author =       "R. W. Watson and S. A. Mamrak",
  title =        "Gaining Efficiency in Transport Services by
                 Appropriate Design and Implementation Choices",
  journal =      "ACM Transactions on Computer Systems",
  publisher =    "Association for Computing Machinery",
  volume =       "5",
  number =       "2",
  month =        may,
  year =         "1987",
  pages =        "97--120",
  keywords =     "Design; experimentation; measurement; performance;
                 interprocess communication; performance of
                 communication protocols; transport layer
                 protocols-design and implementation",
  bibdate =      "Mon Jun 15 09:23:13 1987",
  owner =        "manning",
}

@Article{WEGNER83,
  key =          "Wegner \& Smolka",
  author =       "P. Wegner and S. A. Smolka",
  title =        "Processes, Tasks, and Monitors: {A} Comparative Study
                 of Concurrent Programming Primitives",
  journal =      "IEEE Transactions on Software Engineering",
  volume =       "SE-9",
  number =       "4",
  month =        jul,
  year =         "1983",
  pages =        "446--462",
  bibdate =      "Mon Oct 15 10:29:10 1984",
}

@PhdThesis{WILEDEN78,
  key =          "Wileden",
  author =       "J. C. Wileden",
  title =        "Modelling Parallel Systems with Dynamic Structure",
  school =       "University of Massachusetts",
  month =        jan,
  year =         "1978",
  bibdate =      "Wed Oct 23 11:29:03 1985",
}

@Book{WILKES79,
  key =          "Wilkes \& Needham",
  author =       "M. V. Wilkes and R. M. Needham",
  title =        "The Cambridge {CAP} Computer and Its Operating
                 System",
  publisher =    "North Holland",
  address =      "Reading, MA",
  year =         "1979",
  bibdate =      "Fri Jan 6 13:51:44 1984",
}

@InProceedings{WILMS83,
  key =          "Wilms et al.",
  author =       "P. F. Wilms and B. G. Lindsay and P. G. Selinger",
  title =        "{"}{I} wish {I} were over there{"}: Distributed
                 Execution Protocols for Data Definition in {R}*",
  booktitle =    "Proceedings of SIGMOD 83 Annual Meeting",
  organization = "ACM SIGMOD",
  publisher =    "ACM",
  address =      "PO Box 64145, Baltimore, MD 21264",
  editor =       "David J. DeWitt and Georges Gardarin",
  month =        may,
  year =         "1983",
  pages =        "238--242",
  abstract =     "The design and implementation of R*, an experimental
                 prototype of a distributed system for the management of
                 interrelated, voluntarily cooperating, but also
                 autonomous databases is based on several major
                 objectives: site autonomy, transparency, ease of use
                 and performance. This paper discusses the way data
                 definition and control statements are executed in a
                 distributed environment and shows how the general
                 objectives are fulfilled. Specialized distributed
                 execution facilities have been developed to facilitate
                 the implementation of complex multi-site functions.
                 This paper describes the facilities and methodology
                 used to implement the distributed processing needed to
                 perform multi-site data definition operations in R*.",
  bibdate =      "Tue Nov 20 15:19:34 1984",
}

@Article{WITTIE80,
  key =          "Wittie \& Van Tilborg",
  author =       "L. D. Wittie and A. M. Van Tilborg",
  title =        "{MICROS}, {A} Distributed Operating System for
                 {MICRONET}, {A} Reconfigurable Network Computer",
  journal =      "IEEE Transactions on Computers",
  volume =       "C-29",
  number =       "12",
  month =        dec,
  year =         "1980",
  pages =        "1133--1144",
  bibdate =      "Thu Jan 31 14:37:14 1985",
}

@Article{WULF74,
  key =          "Wulf et al.",
  title =        "{HYDRA}: The kernel of a multiprocessor operatng
                 system",
  author =       "W. Wulf and E. Cohen and W. Corwin and A. Jones and R.
                 Levin and C. Pierson and F. Pollack",
  journal =      "Communications of the Association of Computing
                 Machinery",
  pages =        "337--45",
  year =         "1974",
  volume =       "17",
  number =       "6",
  month =        jun,
}

@InProceedings{WULF75B,
  key =          "Wulf et al.",
  author =       "W. A. Wulf and R. Levin and C. Pierson",
  title =        "Overview of the Hydra Operating System",
  booktitle =    "Proceedings of the ACM Symposium on Operating System
                 Principles",
  organization = "ACM",
  year =         "1975",
  month =        nov,
}

@TechReport{WULF80,
  key =          "Wulf",
  author =       "W. A. Wulf",
  title =        "{PQCC}: {A} Machine-Relative Compiler Technology",
  number =       "CMU-CS-80-144",
  institution =  "Department of Computer Science, Carnegie-Mellon
                 University",
  address =      "Pittsburgh, PA",
  year =         "1980",
  month =        sep,
  abstract =     "'PQCC' is a research project that is attempting to
                 automate the construction of 'production quality'
                 compilers--ones that are competitive in every respect
                 with the best hand-generated compilers of today. Input
                 to the PQCC technology consists of descriptions of both
                 the language to be compiled and the target computer for
                 which code is to be produced. Output from the PQCC is a
                 PQC, a production-quality compiler. This paper focusses
                 on the techniques used in PQCC that are likely to lead
                 to other forms of 'machine-relative' software--software
                 that is parameterized by the characteristics of a
                 computer system.",
  bibdate =      "Thu Jun 23 16:47:45 1983",
}

@Book{WULF81,
  key =          "Wulf et al.",
  title =        "Hydra/{C}.mmp: An Experimental Computer System",
  author =       "W. A. Wulf and R. Levin and P. Harbison",
  publisher =    "McGraw-Hill",
  year =         "1981",
}

@TechReport{XEROX81,
  key =          "Xerox",
  author =       "Xerox Corporation",
  title =        "Courier: The Remote Procedure Call Protocol",
  number =       "XSIS 038112",
  institution =  "Xerox Corporation",
  year =         "1981",
  month =        dec,
  bibdate =      "Tue Jul 28 16:59:40 1987",
  owner =        "manning",
}

@InProceedings{YAU79,
  key =          "Yau \& Yang",
  author =       "S. S. Yau and C. C. Yang",
  title =        "An Approach to Distributed Computing System Software
                 Design",
  organization = "IEEE",
  booktitle =    "Proceedings of the First International Conference on
                 Distributed Computing Systems, Huntsville, Alabama",
  year =         "1979",
  month =        oct,
  pages =        "31--42",
}

@TechReport{ZONG83,
  key =          "Zong",
  author =       "Y. X. Zong",
  title =        "Implementation of Dynamic Process Communication on
                 Intel432",
  number =       "CMU-CS-84-105",
  institution =  "Carnegie-Mellon University",
  year =         "1983",
  month =        sep,
  bibdate =      "Thu Oct 17 09:31:49 1985",
}

@TechReport{Spine98,
  title =        "{SPINE}: An Operating System for Intelligent Network
                 Adapters",
  type =         "Technical Report",
  number =       "TR-98-08-01",
  month =        aug,
  year =         "1998",
  bibdate =      "August 04, 1998",
  author =       "M. Fiuczynski and R. Martin and B. Bershad and D.
                 Culler",
  abstract =     "The emergence of fast, cheap embedded processors
                 presents the opportunity for processing to occur on the
                 network adapter. We are investigating how a system
                 design incorporating such an intelligent network
                 adapter can be used for applications that benefit from
                 being tightly integrated with the network subsystem. We
                 are developing a safe, extensible operating system,
                 called SPINE, which enables applications to compute
                 directly on the network adapter. We demonstrate the
                 feasibility of our approach with two applications: a
                 video client and an Internet Protocol router. As a
                 result of our system structure, image data is
                 transferred only once over the I/O bus and places no
                 load on the host CPU to display video at aggregate
                 rates exceeding 100 Mbps. Similarly, the IP router can
                 forward roughly 10,000 packets per second on each
                 network adapter, while placing no load on the host CPU.
                 Based on our experiences, we describe three hardware
                 features useful for improving performance. Finally, we
                 conclude that offloading work to the network adapter
                 can make sense, even using current embedded processor
                 technology.",
  institution =  "University of Washington, Department of Computer
                 Science and Engineering",
}

@Article{VarkiEtAl04,
  key =          "Varki et al.",
  author =       "Elizabeth Varki and Arif Merchant and Jianzhang Xu
                  and Xiaozhou Qiu",
  title =        "Issues and Challenges in the Performance Analysis of Real
                  Disk Arrays",
  journal =      "IEEE Transactions on Parallel and Distributed Systems",
  publisher =    "IEEE",
  volume =       "15",
  number =       "6",
  month =        jun,
  year =         "2004",
  pages =        "559--574",
}

